<?xml version="1.0" encoding="utf-8"?>
<Simulations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="6">
  <Name>Simulations</Name>
  <Memo>
    <Name>To do</Name>
    <MemoText><![CDATA[Mass balance
: - plant in a single zone compared to spread across two zones should transpire the same amount of water before stress sets 
in but be able to maintain longer because of access to more soil.  


]]></MemoText>
  </Memo>
  <DataStore>
    <Name>DataStore</Name>
    <AutoExport>false</AutoExport>
    <MaximumResultsPerPage>0</MaximumResultsPerPage>
  </DataStore>
  <Folder>
    <Name>NoStress</Name>
    <Experiment>
      <Name>NumZonesNoStress</Name>
      <Factors>
        <Name>Factors</Name>
        <Factor>
          <Name>NumOfZones</Name>
          <Specifications>
            <string>[DoRootsSingle].Script.Zone1Prop=0.0,0.25,0.5,0.75,1.0</string>
          </Specifications>
        </Factor>
      </Factors>
      <Simulation>
        <Name>BaseNoStress</Name>
        <Clock>
          <Name>Clock</Name>
          <StartDate>2000-01-01T00:00:00</StartDate>
          <EndDate>2000-12-31T00:00:00</EndDate>
        </Clock>
        <ControlledEnvironment>
          <Name>ControlledEnvironment</Name>
          <MaxT>25</MaxT>
          <MinT>15</MinT>
          <Rain>0</Rain>
          <Radn>25</Radn>
          <PanEvap>0</PanEvap>
          <VP>17</VP>
          <Wind>3</Wind>
          <CO2>350</CO2>
          <AirPressure>1010</AirPressure>
          <Latitude>0</Latitude>
          <DayLength>12</DayLength>
        </ControlledEnvironment>
        <SoilArbitrator>
          <Name>SoilArbitrator</Name>
        </SoilArbitrator>
        <Summary>
          <Name>Summary</Name>
        </Summary>
        <Zone>
          <Name>Zone0</Name>
          <Folder>
            <Name>Managers</Name>
            <Manager>
              <Name>DoRootsSingle</Name>
              <Script>
                <Zone0Depth>600</Zone0Depth>
                <Zone0Mass>500</Zone0Mass>
                <Zone1Name>Zone1</Zone1Name>
                <Zone1Prop>0</Zone1Prop>
                <Zone2Name>Zone2</Zone2Name>
                <Zone2Prop>0</Zone2Prop>
                <Zone3Name>Zone3</Zone3Name>
                <Zone3Prop>0</Zone3Prop>
              </Script>
              <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double Zone0Depth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double Zone0Mass { get; set; }

		[Description("Name of the first zone: ")] public string Zone1Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone1Prop { get; set; }

		[Description("Name of the second zone: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone2Prop { get; set; }

		[Description("Name of the third zone: ")] public string Zone3Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone3Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					//double test = species.RootWt;
					if (Zone1Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone1Prop * Zone0Depth, rootDM: Zone1Prop * Zone0Mass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone2Prop * Zone0Depth, rootDM: Zone2Prop * Zone0Mass, specificRootLength: 100);
					if (Zone3Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone3Prop * Zone0Depth, rootDM: Zone3Prop * Zone0Mass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
            </Manager>
            <Manager>
              <Name>CutRotationSingle</Name>
              <Script>
                <CutRotationStartDate>1900-07-01</CutRotationStartDate>
                <CutRotationEndDate>2100-12-31</CutRotationEndDate>
                <CutInterval>1</CutInterval>
                <IntervalType>FixedInterval</IntervalType>
                <DurationOfCut>1</DurationOfCut>
                <RemoveAmountType>ResidualDM</RemoveAmountType>
                <AmountGiven>2250</AmountGiven>
                <DMRemoveType>RemoveAll</DMRemoveType>
                <FractionN2Remove>1</FractionN2Remove>
                <ProportionN2Dung>0</ProportionN2Dung>
              </Script>
              <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticFertiliser</Name>
              <Script>
                <AllowFertiliser>yes</AllowFertiliser>
                <Depth2SoilN>600</Depth2SoilN>
                <CriticalSoilN>100</CriticalSoilN>
                <FertNAmount>50</FertNAmount>
                <FertType>UreaN</FertType>
                <FertApplicationDepth>1</FertApplicationDepth>
                <FertMinimumDays>1</FertMinimumDays>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticIrrigation</Name>
              <Script>
                <allowIrrigation>yes</allowIrrigation>
                <allowIrrigationAll>yes</allowIrrigationAll>
                <seasonStart>1-Jan</seasonStart>
                <seasonEnd>31-Dec</seasonEnd>
                <seasonsAllocation>10000</seasonsAllocation>
                <triggerDeficit>99</triggerDeficit>
                <targetDeficit>100</targetDeficit>
                <returndays>1</returndays>
                <maximumAmount>5</maximumAmount>
                <depthPAWC>600</depthPAWC>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
            </Manager>
          </Folder>
          <MicroClimate>
            <Name>MicroClimate</Name>
            <a_interception>0</a_interception>
            <b_interception>1</b_interception>
            <c_interception>0</c_interception>
            <d_interception>0</d_interception>
            <soil_albedo>0.23</soil_albedo>
            <sun_angle>15</sun_angle>
            <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
            <night_interception_fraction>0.5</night_interception_fraction>
            <refheight>2</refheight>
            <albedo>0.15</albedo>
            <emissivity>0.96</emissivity>
            <RadIntTotal>0</RadIntTotal>
          </MicroClimate>
          <Irrigation>
            <Name>Irrigation</Name>
          </Irrigation>
          <Fertiliser>
            <Name>Fertiliser</Name>
          </Fertiliser>
          <SurfaceOrganicMatter>
            <Name>SurfaceOrganicMatter</Name>
            <PondActive>no</PondActive>
            <ReportAdditions>no</ReportAdditions>
            <ReportRemovals>no</ReportRemovals>
            <ResidueTypes>
              <Name>ResidueTypes</Name>
              <LoadFromResource>ResidueTypes</LoadFromResource>
            </ResidueTypes>
            <TillageTypes>
              <Name>TillageTypesList</Name>
              <TillageType />
            </TillageTypes>
            <Pools>
              <Pool>
                <PoolName>Sward</PoolName>
                <ResidueType>grass</ResidueType>
                <Mass>0</Mass>
                <CNRatio>15</CNRatio>
                <CPRatio>NaN</CPRatio>
                <StandingFraction>0</StandingFraction>
              </Pool>
            </Pools>
            <PoolName>Sward</PoolName>
            <type>grass</type>
            <mass>0</mass>
            <standing_fraction>0</standing_fraction>
            <cpr />
            <cnr>15</cnr>
            <CriticalResidueWeight>2000</CriticalResidueWeight>
            <OptimumDecompTemp>20</OptimumDecompTemp>
            <MaxCumulativeEOS>20</MaxCumulativeEOS>
            <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
            <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
            <TotalLeachRain>25</TotalLeachRain>
            <MinRainToLeach>10</MinRainToLeach>
            <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
            <DefaultCPRatio>0</DefaultCPRatio>
            <DefaultStandingFraction>0</DefaultStandingFraction>
            <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
            <FractionFaecesAdded>0.5</FractionFaecesAdded>
          </SurfaceOrganicMatter>
          <Soil>
            <Name>Soil</Name>
            <Analysis>
              <Name>Analysis</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Rocks>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </Rocks>
              <Texture />
              <MunsellColour />
              <PH>
                <double>6</double>
                <double>6</double>
                <double>6</double>
                <double>6</double>
              </PH>
              <CEC>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </CEC>
              <ParticleSizeSand>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </ParticleSizeSand>
              <ParticleSizeSilt>
                <double>30</double>
                <double>30</double>
                <double>30</double>
                <double>30</double>
              </ParticleSizeSilt>
              <ParticleSizeClay>
                <double>60</double>
                <double>60</double>
                <double>60</double>
                <double>60</double>
              </ParticleSizeClay>
              <PHUnits>Water</PHUnits>
              <BoronUnits>HotWater</BoronUnits>
            </Analysis>
            <Water>
              <Name>Water</Name>
              <SoilCrop>
                <Name>RyegrassSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <SoilCrop>
                <Name>WhiteCloverSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <BD>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
              </BD>
              <AirDry>
                <double>0.05</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </AirDry>
              <LL15>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL15>
              <DUL>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
              </DUL>
              <SAT>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
              </SAT>
              <KS>
                <double>500</double>
                <double>500</double>
                <double>500</double>
                <double>500</double>
              </KS>
            </Water>
            <SoilWater>
              <Name>SoilWater</Name>
              <SummerDate>1-Nov</SummerDate>
              <SummerU>6</SummerU>
              <SummerCona>3.5</SummerCona>
              <WinterDate>1-apr</WinterDate>
              <WinterU>6</WinterU>
              <WinterCona>3.5</WinterCona>
              <DiffusConst>88</DiffusConst>
              <DiffusSlope>35</DiffusSlope>
              <Salb>0.13</Salb>
              <CN2Bare>73</CN2Bare>
              <CNRed>20</CNRed>
              <CNCov>0.8</CNCov>
              <slope>0</slope>
              <discharge_width>0</discharge_width>
              <catchment_area>0</catchment_area>
              <max_pond>0</max_pond>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <SWCON>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
              </SWCON>
              <KLAT>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </KLAT>
              <residueinterception>0</residueinterception>
            </SoilWater>
            <SoilNitrogen>
              <Name>SoilNitrogen</Name>
              <fom_type>
                <string>default</string>
                <string>manure</string>
                <string>mucuna</string>
                <string>lablab</string>
                <string>shemp</string>
                <string>stable</string>
              </fom_type>
              <fract_carb>
                <double>0.2</double>
                <double>0.3</double>
                <double>0.54</double>
                <double>0.57</double>
                <double>0.45</double>
                <double>0</double>
              </fract_carb>
              <fract_cell>
                <double>0.7</double>
                <double>0.3</double>
                <double>0.37</double>
                <double>0.37</double>
                <double>0.47</double>
                <double>0.1</double>
              </fract_cell>
              <fract_lign>
                <double>0.1</double>
                <double>0.4</double>
                <double>0.09</double>
                <double>0.06</double>
                <double>0.08</double>
                <double>0.9</double>
              </fract_lign>
              <wfpsN2N2O_x>
                <double>22</double>
                <double>88</double>
              </wfpsN2N2O_x>
              <wfpsN2N2O_y>
                <double>0.1</double>
                <double>1</double>
              </wfpsN2N2O_y>
              <oc>
                <double>3.7136764881329496</double>
                <double>2.4698281813043792</double>
                <double>1.2383961716086014</double>
                <double>0.49836009167083023</double>
              </oc>
            </SoilNitrogen>
            <SoilOrganicMatter>
              <Name>SoilOrganicMatter</Name>
              <RootCN>40</RootCN>
              <RootWt>0</RootWt>
              <SoilCN>12</SoilCN>
              <EnrACoeff>7.4</EnrACoeff>
              <EnrBCoeff>0.2</EnrBCoeff>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Depth>
                <string>0-15</string>
                <string>15-30</string>
                <string>30-45</string>
                <string>45-60</string>
              </Depth>
              <OC>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </OC>
              <FBiom>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FBiom>
              <FInert>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FInert>
              <OCUnits>Total</OCUnits>
            </SoilOrganicMatter>
            <InitialWater>
              <Name>Initial water</Name>
              <PercentMethod>EvenlyDistributed</PercentMethod>
              <FractionFull>0.95</FractionFull>
              <DepthWetSoil>NaN</DepthWetSoil>
            </InitialWater>
            <Sample>
              <Name>Initial nitrogen</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <NO3>
                <double>15</double>
                <double>15</double>
                <double>15</double>
                <double>15</double>
              </NO3>
              <NH4>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </NH4>
              <NO3Units>ppm</NO3Units>
              <NH4Units>ppm</NH4Units>
              <SWUnits>Volumetric</SWUnits>
              <OCUnits>Total</OCUnits>
              <PHUnits>Water</PHUnits>
            </Sample>
            <CERESSoilTemperature>
              <Name>CERESSoilTemperature</Name>
            </CERESSoilTemperature>
            <RecordNumber>0</RecordNumber>
            <SoilType />
            <LocalName>Stores lots of water</LocalName>
            <Site>Made up</Site>
            <NearestTown />
            <Region />
            <Country />
            <NaturalVegetation />
            <Latitude>0</Latitude>
            <Longitude>0</Longitude>
          </Soil>
          <SoluteManager>
            <Name>SoluteManager</Name>
          </SoluteManager>
          <PastureSpecies>
            <Name>Ryegrass</Name>
            <MaximumNUptake>10</MaximumNUptake>
            <Albedo>0.26</Albedo>
            <Gsmax>0.011</Gsmax>
            <R50>200</R50>
            <SpeciesFamily>Grass</SpeciesFamily>
            <PhotosyntheticPathway>C3</PhotosyntheticPathway>
            <InitialShootDM>2500</InitialShootDM>
            <InitialRootDM>500</InitialRootDM>
            <InitialRootDepth>600</InitialRootDepth>
            <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
            <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
            <GrowthTminimum>1</GrowthTminimum>
            <GrowthToptimum>20</GrowthToptimum>
            <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
            <UseHeatStressFactor>yes</UseHeatStressFactor>
            <HeatOnsetTemperature>28</HeatOnsetTemperature>
            <HeatFullTemperature>35</HeatFullTemperature>
            <HeatRecoverySumDD>30</HeatRecoverySumDD>
            <HeatRecoveryTReference>25</HeatRecoveryTReference>
            <UseColdStressFactor>yes</UseColdStressFactor>
            <ColdOnsetTemperature>1</ColdOnsetTemperature>
            <ColdFullTemperature>-5</ColdFullTemperature>
            <ColdRecoverySumDD>25</ColdRecoverySumDD>
            <ColdRecoveryTReference>0</ColdRecoveryTReference>
            <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
            <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
            <RespirationTReference>20</RespirationTReference>
            <RespirationExponent>1.5</RespirationExponent>
            <NThresholdsForLeaves>
              <double>0.04</double>
              <double>0.012</double>
              <double>0.05</double>
            </NThresholdsForLeaves>
            <NThresholdsForStems>
              <double>0.02</double>
              <double>0.006</double>
              <double>0.025</double>
            </NThresholdsForStems>
            <NThresholdsForStolons>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NThresholdsForStolons>
            <NThresholdsForRoots>
              <double>0.02</double>
              <double>0.006</double>
              <double>0.025</double>
            </NThresholdsForRoots>
            <DegreesDayForGermination>125</DegreesDayForGermination>
            <TargetShootRootRatio>4</TargetShootRootRatio>
            <MaxRootAllocation>0.25</MaxRootAllocation>
            <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
            <UseReproSeasonFactor>yes</UseReproSeasonFactor>
            <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
            <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
            <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
            <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
            <FractionLeafMaximum>0.7</FractionLeafMaximum>
            <FractionLeafMinimum>0.7</FractionLeafMinimum>
            <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
            <FractionLeafDMFactor>2000</FractionLeafDMFactor>
            <FractionLeafExponent>3</FractionLeafExponent>
            <FractionToStolon>0</FractionToStolon>
            <SpecificLeafArea>25</SpecificLeafArea>
            <SpecificRootLength>100</SpecificRootLength>
            <StolonEffectOnLAI>0</StolonEffectOnLAI>
            <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
            <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
            <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
            <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
            <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
            <DetachmentRateShoot>0.08</DetachmentRateShoot>
            <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
            <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
            <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
            <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
            <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
            <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
            <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
            <FractionNLuxuryRemobilisable>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </FractionNLuxuryRemobilisable>
            <MinimumNFixation>0</MinimumNFixation>
            <MaximumNFixation>0</MaximumNFixation>
            <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
            <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
            <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
            <NDillutionCoefficient>0.25</NDillutionCoefficient>
            <GlfGeneric>1</GlfGeneric>
            <GlfSoilFertility>1</GlfSoilFertility>
            <PlantHeightMinimum>25</PlantHeightMinimum>
            <PlantHeightMaximum>600</PlantHeightMaximum>
            <PlantHeightMassForMax>10000</PlantHeightMassForMax>
            <PlantHeightExponent>2.8</PlantHeightExponent>
            <RootDepthMinimum>50</RootDepthMinimum>
            <RootDepthMaximum>750</RootDepthMaximum>
            <RootElongationRate>25</RootElongationRate>
            <RootDistributionDepthParam>90</RootDistributionDepthParam>
            <RootDistributionExponent>3.2</RootDistributionExponent>
            <DigestibilitiesCellWall>
              <double>0.6</double>
              <double>0.6</double>
              <double>0.6</double>
              <double>0.2</double>
            </DigestibilitiesCellWall>
            <MinimumGreenWt>100</MinimumGreenWt>
            <FractionStolonStanding>0</FractionStolonStanding>
            <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
            <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
            <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
            <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
          </PastureSpecies>
          <Report>
            <Name>Results</Name>
            <ExperimentFactorNames />
            <ExperimentFactorValues />
            <VariableNames>
              <string>[Clock].Today as Date</string>
              <string>[Ryegrass].AboveGroundWt as PlantMass</string>
              <string>[Ryegrass].HarvestedWt as Harvested</string>
              <string>[Ryegrass].WaterDemand as SW_Demand</string>
              <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
              <string>[Ryegrass].GlfWaterSupply as glfWater</string>
              <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
              <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
              <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
              <string>[Irrigation].IrrigationApplied as Irrigation</string>
              <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
            </VariableNames>
            <EventNames>
              <string>[Clock].EndOfDay</string>
            </EventNames>
          </Report>
          <Area>1</Area>
          <Slope>0</Slope>
        </Zone>
        <Zone>
          <Name>Zone1</Name>
          <Folder>
            <Name>Managers</Name>
            <Manager>
              <Name>AutomaticFertiliser</Name>
              <Script>
                <AllowFertiliser>yes</AllowFertiliser>
                <Depth2SoilN>600</Depth2SoilN>
                <CriticalSoilN>100</CriticalSoilN>
                <FertNAmount>50</FertNAmount>
                <FertType>UreaN</FertType>
                <FertApplicationDepth>1</FertApplicationDepth>
                <FertMinimumDays>1</FertMinimumDays>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticIrrigation</Name>
              <Script>
                <allowIrrigation>yes</allowIrrigation>
                <allowIrrigationAll>yes</allowIrrigationAll>
                <seasonStart>1-Jan</seasonStart>
                <seasonEnd>31-Dec</seasonEnd>
                <seasonsAllocation>10000</seasonsAllocation>
                <triggerDeficit>99</triggerDeficit>
                <targetDeficit>100</targetDeficit>
                <returndays>1</returndays>
                <maximumAmount>5</maximumAmount>
                <depthPAWC>600</depthPAWC>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
            </Manager>
          </Folder>
          <MicroClimate>
            <Name>MicroClimate</Name>
            <a_interception>0</a_interception>
            <b_interception>1</b_interception>
            <c_interception>0</c_interception>
            <d_interception>0</d_interception>
            <soil_albedo>0.23</soil_albedo>
            <sun_angle>15</sun_angle>
            <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
            <night_interception_fraction>0.5</night_interception_fraction>
            <refheight>2</refheight>
            <albedo>0.15</albedo>
            <emissivity>0.96</emissivity>
            <RadIntTotal>0</RadIntTotal>
          </MicroClimate>
          <Irrigation>
            <Name>Irrigation</Name>
          </Irrigation>
          <Fertiliser>
            <Name>Fertiliser</Name>
          </Fertiliser>
          <SurfaceOrganicMatter>
            <Name>SurfaceOrganicMatter</Name>
            <PondActive>no</PondActive>
            <ReportAdditions>no</ReportAdditions>
            <ReportRemovals>no</ReportRemovals>
            <ResidueTypes>
              <Name>ResidueTypes</Name>
              <LoadFromResource>ResidueTypes</LoadFromResource>
            </ResidueTypes>
            <TillageTypes>
              <Name>TillageTypesList</Name>
              <TillageType />
            </TillageTypes>
            <Pools>
              <Pool>
                <PoolName>Sward</PoolName>
                <ResidueType>grass</ResidueType>
                <Mass>0</Mass>
                <CNRatio>15</CNRatio>
                <CPRatio>NaN</CPRatio>
                <StandingFraction>0</StandingFraction>
              </Pool>
            </Pools>
            <PoolName>Sward</PoolName>
            <type>grass</type>
            <mass>0</mass>
            <standing_fraction>0</standing_fraction>
            <cpr />
            <cnr>15</cnr>
            <CriticalResidueWeight>2000</CriticalResidueWeight>
            <OptimumDecompTemp>20</OptimumDecompTemp>
            <MaxCumulativeEOS>20</MaxCumulativeEOS>
            <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
            <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
            <TotalLeachRain>25</TotalLeachRain>
            <MinRainToLeach>10</MinRainToLeach>
            <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
            <DefaultCPRatio>0</DefaultCPRatio>
            <DefaultStandingFraction>0</DefaultStandingFraction>
            <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
            <FractionFaecesAdded>0.5</FractionFaecesAdded>
          </SurfaceOrganicMatter>
          <Soil>
            <Name>Soil</Name>
            <Analysis>
              <Name>Analysis</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Rocks>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </Rocks>
              <Texture />
              <MunsellColour />
              <PH>
                <double>6</double>
                <double>6</double>
                <double>6</double>
                <double>6</double>
              </PH>
              <CEC>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </CEC>
              <ParticleSizeSand>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </ParticleSizeSand>
              <ParticleSizeSilt>
                <double>30</double>
                <double>30</double>
                <double>30</double>
                <double>30</double>
              </ParticleSizeSilt>
              <ParticleSizeClay>
                <double>60</double>
                <double>60</double>
                <double>60</double>
                <double>60</double>
              </ParticleSizeClay>
              <PHUnits>Water</PHUnits>
              <BoronUnits>HotWater</BoronUnits>
            </Analysis>
            <Water>
              <Name>Water</Name>
              <SoilCrop>
                <Name>RyegrassSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <SoilCrop>
                <Name>WhiteCloverSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <BD>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
              </BD>
              <AirDry>
                <double>0.05</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </AirDry>
              <LL15>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL15>
              <DUL>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
              </DUL>
              <SAT>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
              </SAT>
              <KS>
                <double>500</double>
                <double>500</double>
                <double>500</double>
                <double>500</double>
              </KS>
            </Water>
            <SoilWater>
              <Name>SoilWater</Name>
              <SummerDate>1-Nov</SummerDate>
              <SummerU>6</SummerU>
              <SummerCona>3.5</SummerCona>
              <WinterDate>1-apr</WinterDate>
              <WinterU>6</WinterU>
              <WinterCona>3.5</WinterCona>
              <DiffusConst>88</DiffusConst>
              <DiffusSlope>35</DiffusSlope>
              <Salb>0.13</Salb>
              <CN2Bare>73</CN2Bare>
              <CNRed>20</CNRed>
              <CNCov>0.8</CNCov>
              <slope>0</slope>
              <discharge_width>0</discharge_width>
              <catchment_area>0</catchment_area>
              <max_pond>0</max_pond>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <SWCON>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
              </SWCON>
              <KLAT>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </KLAT>
              <residueinterception>0</residueinterception>
            </SoilWater>
            <SoilNitrogen>
              <Name>SoilNitrogen</Name>
              <fom_type>
                <string>default</string>
                <string>manure</string>
                <string>mucuna</string>
                <string>lablab</string>
                <string>shemp</string>
                <string>stable</string>
              </fom_type>
              <fract_carb>
                <double>0.2</double>
                <double>0.3</double>
                <double>0.54</double>
                <double>0.57</double>
                <double>0.45</double>
                <double>0</double>
              </fract_carb>
              <fract_cell>
                <double>0.7</double>
                <double>0.3</double>
                <double>0.37</double>
                <double>0.37</double>
                <double>0.47</double>
                <double>0.1</double>
              </fract_cell>
              <fract_lign>
                <double>0.1</double>
                <double>0.4</double>
                <double>0.09</double>
                <double>0.06</double>
                <double>0.08</double>
                <double>0.9</double>
              </fract_lign>
              <wfpsN2N2O_x>
                <double>22</double>
                <double>88</double>
              </wfpsN2N2O_x>
              <wfpsN2N2O_y>
                <double>0.1</double>
                <double>1</double>
              </wfpsN2N2O_y>
              <oc>
                <double>3.7136764881329496</double>
                <double>2.4698281813043792</double>
                <double>1.2383961716086014</double>
                <double>0.49836009167083023</double>
              </oc>
            </SoilNitrogen>
            <SoilOrganicMatter>
              <Name>SoilOrganicMatter</Name>
              <RootCN>40</RootCN>
              <RootWt>0</RootWt>
              <SoilCN>12</SoilCN>
              <EnrACoeff>7.4</EnrACoeff>
              <EnrBCoeff>0.2</EnrBCoeff>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Depth>
                <string>0-15</string>
                <string>15-30</string>
                <string>30-45</string>
                <string>45-60</string>
              </Depth>
              <OC>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </OC>
              <FBiom>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FBiom>
              <FInert>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FInert>
              <OCUnits>Total</OCUnits>
            </SoilOrganicMatter>
            <InitialWater>
              <Name>Initial water</Name>
              <PercentMethod>EvenlyDistributed</PercentMethod>
              <FractionFull>0.95</FractionFull>
              <DepthWetSoil>NaN</DepthWetSoil>
            </InitialWater>
            <Sample>
              <Name>Initial nitrogen</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <NO3>
                <double>15</double>
                <double>15</double>
                <double>15</double>
                <double>15</double>
              </NO3>
              <NH4>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </NH4>
              <NO3Units>ppm</NO3Units>
              <NH4Units>ppm</NH4Units>
              <SWUnits>Volumetric</SWUnits>
              <OCUnits>Total</OCUnits>
              <PHUnits>Water</PHUnits>
            </Sample>
            <CERESSoilTemperature>
              <Name>CERESSoilTemperature</Name>
            </CERESSoilTemperature>
            <RecordNumber>0</RecordNumber>
            <SoilType />
            <LocalName>Stores lots of water</LocalName>
            <Site>Made up</Site>
            <NearestTown />
            <Region />
            <Country />
            <NaturalVegetation />
            <Latitude>0</Latitude>
            <Longitude>0</Longitude>
          </Soil>
          <SoluteManager>
            <Name>SoluteManager</Name>
          </SoluteManager>
          <Report>
            <Name>Results</Name>
            <ExperimentFactorNames />
            <ExperimentFactorValues />
            <VariableNames>
              <string>[Clock].Today as Date</string>
              <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
              <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
              <string>[Irrigation].IrrigationApplied as Irrigation</string>
              <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
            </VariableNames>
            <EventNames>
              <string>[Clock].EndOfDay</string>
            </EventNames>
          </Report>
          <Area>1</Area>
          <Slope>0</Slope>
        </Zone>
        <Folder>
          <Name>Herbage</Name>
          <Graph>
            <Name>PlantWt</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>PlantMass</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>Harvested</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>Harvested</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>true</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterDemand</Name>
            <Series>
              <Name>Demand</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SW_Demand</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterUptake</Name>
            <Series>
              <Name>Uptake</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-1663232</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SW_Uptake</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterStress</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>glfWater</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>NStress</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>glfNitrogen</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>SoilWater</Name>
            <Series>
              <Name>Water</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SoilWater</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>SoilNitrogen</Name>
            <Series>
              <Name>Nitrogen</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SoilNitrogen</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
        </Folder>
      </Simulation>
      <Folder>
        <Name>Plots</Name>
        <Graph>
          <Name>PlantWt</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>PlantMass</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>2600</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>Harvested</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Harvested</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWaterZone0</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWaterZone1</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogenZone0</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>150</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogenZone1</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>150</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationAppliedZone0</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationAppliedZone1</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserAppliedZone0</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserAppliedZone1</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
      </Folder>
    </Experiment>
  </Folder>
  <Folder>
    <Name>CheckWater</Name>
    <Experiment>
      <Name>NumZonesWater</Name>
      <Factors>
        <Name>Factors</Name>
        <Factor>
          <Name>NumOfZones</Name>
          <Specifications>
            <string>[DoRootsSingle].Script.Zone1Prop=0.0,0.25,0.5,0.75,1.0</string>
          </Specifications>
        </Factor>
      </Factors>
      <Simulation>
        <Name>BaseWater</Name>
        <Clock>
          <Name>Clock</Name>
          <StartDate>2000-01-01T00:00:00</StartDate>
          <EndDate>2000-12-31T00:00:00</EndDate>
        </Clock>
        <ControlledEnvironment>
          <Name>ControlledEnvironment</Name>
          <MaxT>25</MaxT>
          <MinT>15</MinT>
          <Rain>0</Rain>
          <Radn>25</Radn>
          <PanEvap>0</PanEvap>
          <VP>17</VP>
          <Wind>3</Wind>
          <CO2>350</CO2>
          <AirPressure>1010</AirPressure>
          <Latitude>0</Latitude>
          <DayLength>12</DayLength>
        </ControlledEnvironment>
        <SoilArbitrator>
          <Name>SoilArbitrator</Name>
        </SoilArbitrator>
        <Summary>
          <Name>Summary</Name>
        </Summary>
        <Zone>
          <Name>Zone0</Name>
          <Folder>
            <Name>Managers</Name>
            <Manager>
              <Name>DoRootsSingle</Name>
              <Script>
                <Zone0Depth>600</Zone0Depth>
                <Zone0Mass>500</Zone0Mass>
                <Zone1Name>Zone1</Zone1Name>
                <Zone1Prop>0</Zone1Prop>
                <Zone2Name>Zone2</Zone2Name>
                <Zone2Prop>0</Zone2Prop>
                <Zone3Name>Zone3</Zone3Name>
                <Zone3Prop>0</Zone3Prop>
              </Script>
              <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double Zone0Depth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double Zone0Mass { get; set; }

		[Description("Name of the first zone: ")] public string Zone1Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone1Prop { get; set; }

		[Description("Name of the second zone: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone2Prop { get; set; }

		[Description("Name of the third zone: ")] public string Zone3Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone3Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					//double test = species.RootWt;
					if (Zone1Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone1Prop * Zone0Depth, rootDM: Zone1Prop * Zone0Mass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone2Prop * Zone0Depth, rootDM: Zone2Prop * Zone0Mass, specificRootLength: 100);
					if (Zone3Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone3Prop * Zone0Depth, rootDM: Zone3Prop * Zone0Mass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
            </Manager>
            <Manager>
              <Name>CutRotationSingle</Name>
              <Script>
                <CutRotationStartDate>1900-07-01</CutRotationStartDate>
                <CutRotationEndDate>2100-12-31</CutRotationEndDate>
                <CutInterval>1</CutInterval>
                <IntervalType>FixedInterval</IntervalType>
                <DurationOfCut>1</DurationOfCut>
                <RemoveAmountType>ResidualDM</RemoveAmountType>
                <AmountGiven>2250</AmountGiven>
                <DMRemoveType>RemoveAll</DMRemoveType>
                <FractionN2Remove>1</FractionN2Remove>
                <ProportionN2Dung>0</ProportionN2Dung>
              </Script>
              <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticFertiliser</Name>
              <Script>
                <AllowFertiliser>yes</AllowFertiliser>
                <Depth2SoilN>600</Depth2SoilN>
                <CriticalSoilN>100</CriticalSoilN>
                <FertNAmount>50</FertNAmount>
                <FertType>UreaN</FertType>
                <FertApplicationDepth>1</FertApplicationDepth>
                <FertMinimumDays>1</FertMinimumDays>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticIrrigation</Name>
              <Script>
                <allowIrrigation>no</allowIrrigation>
                <allowIrrigationAll>yes</allowIrrigationAll>
                <seasonStart>1-Jan</seasonStart>
                <seasonEnd>31-Dec</seasonEnd>
                <seasonsAllocation>10000</seasonsAllocation>
                <triggerDeficit>99</triggerDeficit>
                <targetDeficit>100</targetDeficit>
                <returndays>1</returndays>
                <maximumAmount>5</maximumAmount>
                <depthPAWC>600</depthPAWC>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
            </Manager>
          </Folder>
          <MicroClimate>
            <Name>MicroClimate</Name>
            <a_interception>0</a_interception>
            <b_interception>1</b_interception>
            <c_interception>0</c_interception>
            <d_interception>0</d_interception>
            <soil_albedo>0.23</soil_albedo>
            <sun_angle>15</sun_angle>
            <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
            <night_interception_fraction>0.5</night_interception_fraction>
            <refheight>2</refheight>
            <albedo>0.15</albedo>
            <emissivity>0.96</emissivity>
            <RadIntTotal>0</RadIntTotal>
          </MicroClimate>
          <Irrigation>
            <Name>Irrigation</Name>
          </Irrigation>
          <Fertiliser>
            <Name>Fertiliser</Name>
          </Fertiliser>
          <SurfaceOrganicMatter>
            <Name>SurfaceOrganicMatter</Name>
            <PondActive>no</PondActive>
            <ReportAdditions>no</ReportAdditions>
            <ReportRemovals>no</ReportRemovals>
            <ResidueTypes>
              <Name>ResidueTypes</Name>
              <LoadFromResource>ResidueTypes</LoadFromResource>
            </ResidueTypes>
            <TillageTypes>
              <Name>TillageTypesList</Name>
              <TillageType />
            </TillageTypes>
            <Pools>
              <Pool>
                <PoolName>Sward</PoolName>
                <ResidueType>grass</ResidueType>
                <Mass>0</Mass>
                <CNRatio>15</CNRatio>
                <CPRatio>NaN</CPRatio>
                <StandingFraction>0</StandingFraction>
              </Pool>
            </Pools>
            <PoolName>Sward</PoolName>
            <type>grass</type>
            <mass>0</mass>
            <standing_fraction>0</standing_fraction>
            <cpr />
            <cnr>15</cnr>
            <CriticalResidueWeight>2000</CriticalResidueWeight>
            <OptimumDecompTemp>20</OptimumDecompTemp>
            <MaxCumulativeEOS>20</MaxCumulativeEOS>
            <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
            <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
            <TotalLeachRain>25</TotalLeachRain>
            <MinRainToLeach>10</MinRainToLeach>
            <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
            <DefaultCPRatio>0</DefaultCPRatio>
            <DefaultStandingFraction>0</DefaultStandingFraction>
            <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
            <FractionFaecesAdded>0.5</FractionFaecesAdded>
          </SurfaceOrganicMatter>
          <Soil>
            <Name>Soil</Name>
            <Analysis>
              <Name>Analysis</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Rocks>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </Rocks>
              <Texture />
              <MunsellColour />
              <PH>
                <double>6</double>
                <double>6</double>
                <double>6</double>
                <double>6</double>
              </PH>
              <CEC>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </CEC>
              <ParticleSizeSand>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </ParticleSizeSand>
              <ParticleSizeSilt>
                <double>30</double>
                <double>30</double>
                <double>30</double>
                <double>30</double>
              </ParticleSizeSilt>
              <ParticleSizeClay>
                <double>60</double>
                <double>60</double>
                <double>60</double>
                <double>60</double>
              </ParticleSizeClay>
              <PHUnits>Water</PHUnits>
              <BoronUnits>HotWater</BoronUnits>
            </Analysis>
            <Water>
              <Name>Water</Name>
              <SoilCrop>
                <Name>RyegrassSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <SoilCrop>
                <Name>WhiteCloverSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <BD>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
              </BD>
              <AirDry>
                <double>0.05</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </AirDry>
              <LL15>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL15>
              <DUL>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
              </DUL>
              <SAT>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
              </SAT>
              <KS>
                <double>500</double>
                <double>500</double>
                <double>500</double>
                <double>500</double>
              </KS>
            </Water>
            <SoilWater>
              <Name>SoilWater</Name>
              <SummerDate>1-Nov</SummerDate>
              <SummerU>6</SummerU>
              <SummerCona>3.5</SummerCona>
              <WinterDate>1-apr</WinterDate>
              <WinterU>6</WinterU>
              <WinterCona>3.5</WinterCona>
              <DiffusConst>88</DiffusConst>
              <DiffusSlope>35</DiffusSlope>
              <Salb>0.13</Salb>
              <CN2Bare>73</CN2Bare>
              <CNRed>20</CNRed>
              <CNCov>0.8</CNCov>
              <slope>0</slope>
              <discharge_width>0</discharge_width>
              <catchment_area>0</catchment_area>
              <max_pond>0</max_pond>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <SWCON>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
              </SWCON>
              <KLAT>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </KLAT>
              <residueinterception>0</residueinterception>
            </SoilWater>
            <SoilNitrogen>
              <Name>SoilNitrogen</Name>
              <fom_type>
                <string>default</string>
                <string>manure</string>
                <string>mucuna</string>
                <string>lablab</string>
                <string>shemp</string>
                <string>stable</string>
              </fom_type>
              <fract_carb>
                <double>0.2</double>
                <double>0.3</double>
                <double>0.54</double>
                <double>0.57</double>
                <double>0.45</double>
                <double>0</double>
              </fract_carb>
              <fract_cell>
                <double>0.7</double>
                <double>0.3</double>
                <double>0.37</double>
                <double>0.37</double>
                <double>0.47</double>
                <double>0.1</double>
              </fract_cell>
              <fract_lign>
                <double>0.1</double>
                <double>0.4</double>
                <double>0.09</double>
                <double>0.06</double>
                <double>0.08</double>
                <double>0.9</double>
              </fract_lign>
              <wfpsN2N2O_x>
                <double>22</double>
                <double>88</double>
              </wfpsN2N2O_x>
              <wfpsN2N2O_y>
                <double>0.1</double>
                <double>1</double>
              </wfpsN2N2O_y>
              <oc>
                <double>3.7136764881329496</double>
                <double>2.4698281813043792</double>
                <double>1.2383961716086014</double>
                <double>0.49836009167083023</double>
              </oc>
            </SoilNitrogen>
            <SoilOrganicMatter>
              <Name>SoilOrganicMatter</Name>
              <RootCN>40</RootCN>
              <RootWt>0</RootWt>
              <SoilCN>12</SoilCN>
              <EnrACoeff>7.4</EnrACoeff>
              <EnrBCoeff>0.2</EnrBCoeff>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Depth>
                <string>0-15</string>
                <string>15-30</string>
                <string>30-45</string>
                <string>45-60</string>
              </Depth>
              <OC>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </OC>
              <FBiom>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FBiom>
              <FInert>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FInert>
              <OCUnits>Total</OCUnits>
            </SoilOrganicMatter>
            <InitialWater>
              <Name>Initial water</Name>
              <PercentMethod>EvenlyDistributed</PercentMethod>
              <FractionFull>0.95</FractionFull>
              <DepthWetSoil>NaN</DepthWetSoil>
            </InitialWater>
            <Sample>
              <Name>Initial nitrogen</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <NO3>
                <double>15</double>
                <double>15</double>
                <double>15</double>
                <double>15</double>
              </NO3>
              <NH4>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </NH4>
              <NO3Units>ppm</NO3Units>
              <NH4Units>ppm</NH4Units>
              <SWUnits>Volumetric</SWUnits>
              <OCUnits>Total</OCUnits>
              <PHUnits>Water</PHUnits>
            </Sample>
            <CERESSoilTemperature>
              <Name>CERESSoilTemperature</Name>
            </CERESSoilTemperature>
            <RecordNumber>0</RecordNumber>
            <SoilType />
            <LocalName>Stores lots of water</LocalName>
            <Site>Made up</Site>
            <NearestTown />
            <Region />
            <Country />
            <NaturalVegetation />
            <Latitude>0</Latitude>
            <Longitude>0</Longitude>
          </Soil>
          <SoluteManager>
            <Name>SoluteManager</Name>
          </SoluteManager>
          <PastureSpecies>
            <Name>Ryegrass</Name>
            <MaximumNUptake>10</MaximumNUptake>
            <Albedo>0.26</Albedo>
            <Gsmax>0.011</Gsmax>
            <R50>200</R50>
            <SpeciesFamily>Grass</SpeciesFamily>
            <PhotosyntheticPathway>C3</PhotosyntheticPathway>
            <InitialShootDM>2500</InitialShootDM>
            <InitialRootDM>500</InitialRootDM>
            <InitialRootDepth>600</InitialRootDepth>
            <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
            <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
            <GrowthTminimum>1</GrowthTminimum>
            <GrowthToptimum>20</GrowthToptimum>
            <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
            <UseHeatStressFactor>yes</UseHeatStressFactor>
            <HeatOnsetTemperature>28</HeatOnsetTemperature>
            <HeatFullTemperature>35</HeatFullTemperature>
            <HeatRecoverySumDD>30</HeatRecoverySumDD>
            <HeatRecoveryTReference>25</HeatRecoveryTReference>
            <UseColdStressFactor>yes</UseColdStressFactor>
            <ColdOnsetTemperature>1</ColdOnsetTemperature>
            <ColdFullTemperature>-5</ColdFullTemperature>
            <ColdRecoverySumDD>25</ColdRecoverySumDD>
            <ColdRecoveryTReference>0</ColdRecoveryTReference>
            <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
            <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
            <RespirationTReference>20</RespirationTReference>
            <RespirationExponent>1.5</RespirationExponent>
            <NThresholdsForLeaves>
              <double>0.04</double>
              <double>0.012</double>
              <double>0.05</double>
            </NThresholdsForLeaves>
            <NThresholdsForStems>
              <double>0.02</double>
              <double>0.006</double>
              <double>0.025</double>
            </NThresholdsForStems>
            <NThresholdsForStolons>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NThresholdsForStolons>
            <NThresholdsForRoots>
              <double>0.02</double>
              <double>0.006</double>
              <double>0.025</double>
            </NThresholdsForRoots>
            <DegreesDayForGermination>125</DegreesDayForGermination>
            <TargetShootRootRatio>4</TargetShootRootRatio>
            <MaxRootAllocation>0.25</MaxRootAllocation>
            <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
            <UseReproSeasonFactor>yes</UseReproSeasonFactor>
            <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
            <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
            <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
            <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
            <FractionLeafMaximum>0.7</FractionLeafMaximum>
            <FractionLeafMinimum>0.7</FractionLeafMinimum>
            <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
            <FractionLeafDMFactor>2000</FractionLeafDMFactor>
            <FractionLeafExponent>3</FractionLeafExponent>
            <FractionToStolon>0</FractionToStolon>
            <SpecificLeafArea>25</SpecificLeafArea>
            <SpecificRootLength>100</SpecificRootLength>
            <StolonEffectOnLAI>0</StolonEffectOnLAI>
            <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
            <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
            <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
            <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
            <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
            <DetachmentRateShoot>0.08</DetachmentRateShoot>
            <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
            <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
            <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
            <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
            <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
            <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
            <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
            <FractionNLuxuryRemobilisable>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </FractionNLuxuryRemobilisable>
            <MinimumNFixation>0</MinimumNFixation>
            <MaximumNFixation>0</MaximumNFixation>
            <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
            <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
            <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
            <NDillutionCoefficient>0.25</NDillutionCoefficient>
            <GlfGeneric>1</GlfGeneric>
            <GlfSoilFertility>1</GlfSoilFertility>
            <PlantHeightMinimum>25</PlantHeightMinimum>
            <PlantHeightMaximum>600</PlantHeightMaximum>
            <PlantHeightMassForMax>10000</PlantHeightMassForMax>
            <PlantHeightExponent>2.8</PlantHeightExponent>
            <RootDepthMinimum>50</RootDepthMinimum>
            <RootDepthMaximum>750</RootDepthMaximum>
            <RootElongationRate>25</RootElongationRate>
            <RootDistributionDepthParam>90</RootDistributionDepthParam>
            <RootDistributionExponent>3.2</RootDistributionExponent>
            <DigestibilitiesCellWall>
              <double>0.6</double>
              <double>0.6</double>
              <double>0.6</double>
              <double>0.2</double>
            </DigestibilitiesCellWall>
            <MinimumGreenWt>100</MinimumGreenWt>
            <FractionStolonStanding>0</FractionStolonStanding>
            <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
            <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
            <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
            <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
          </PastureSpecies>
          <Report>
            <Name>Results</Name>
            <ExperimentFactorNames />
            <ExperimentFactorValues />
            <VariableNames>
              <string>[Clock].Today as Date</string>
              <string>[Ryegrass].AboveGroundWt as PlantMass</string>
              <string>[Ryegrass].HarvestedWt as Harvested</string>
              <string>[Ryegrass].WaterDemand as SW_Demand</string>
              <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
              <string>[Ryegrass].GlfWaterSupply as glfWater</string>
              <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
              <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
              <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
              <string>[Irrigation].IrrigationApplied as Irrigation</string>
              <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
            </VariableNames>
            <EventNames>
              <string>[Clock].EndOfDay</string>
            </EventNames>
          </Report>
          <Area>1</Area>
          <Slope>0</Slope>
        </Zone>
        <Zone>
          <Name>Zone1</Name>
          <Folder>
            <Name>Managers</Name>
            <Manager>
              <Name>AutomaticFertiliser</Name>
              <Script>
                <AllowFertiliser>yes</AllowFertiliser>
                <Depth2SoilN>600</Depth2SoilN>
                <CriticalSoilN>100</CriticalSoilN>
                <FertNAmount>50</FertNAmount>
                <FertType>UreaN</FertType>
                <FertApplicationDepth>1</FertApplicationDepth>
                <FertMinimumDays>1</FertMinimumDays>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticIrrigation</Name>
              <Script>
                <allowIrrigation>no</allowIrrigation>
                <allowIrrigationAll>yes</allowIrrigationAll>
                <seasonStart>1-Jan</seasonStart>
                <seasonEnd>31-Dec</seasonEnd>
                <seasonsAllocation>10000</seasonsAllocation>
                <triggerDeficit>99</triggerDeficit>
                <targetDeficit>100</targetDeficit>
                <returndays>1</returndays>
                <maximumAmount>5</maximumAmount>
                <depthPAWC>600</depthPAWC>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
            </Manager>
          </Folder>
          <MicroClimate>
            <Name>MicroClimate</Name>
            <a_interception>0</a_interception>
            <b_interception>1</b_interception>
            <c_interception>0</c_interception>
            <d_interception>0</d_interception>
            <soil_albedo>0.23</soil_albedo>
            <sun_angle>15</sun_angle>
            <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
            <night_interception_fraction>0.5</night_interception_fraction>
            <refheight>2</refheight>
            <albedo>0.15</albedo>
            <emissivity>0.96</emissivity>
            <RadIntTotal>0</RadIntTotal>
          </MicroClimate>
          <Irrigation>
            <Name>Irrigation</Name>
          </Irrigation>
          <Fertiliser>
            <Name>Fertiliser</Name>
          </Fertiliser>
          <SurfaceOrganicMatter>
            <Name>SurfaceOrganicMatter</Name>
            <PondActive>no</PondActive>
            <ReportAdditions>no</ReportAdditions>
            <ReportRemovals>no</ReportRemovals>
            <ResidueTypes>
              <Name>ResidueTypes</Name>
              <LoadFromResource>ResidueTypes</LoadFromResource>
            </ResidueTypes>
            <TillageTypes>
              <Name>TillageTypesList</Name>
              <TillageType />
            </TillageTypes>
            <Pools>
              <Pool>
                <PoolName>Sward</PoolName>
                <ResidueType>grass</ResidueType>
                <Mass>0</Mass>
                <CNRatio>15</CNRatio>
                <CPRatio>NaN</CPRatio>
                <StandingFraction>0</StandingFraction>
              </Pool>
            </Pools>
            <PoolName>Sward</PoolName>
            <type>grass</type>
            <mass>0</mass>
            <standing_fraction>0</standing_fraction>
            <cpr />
            <cnr>15</cnr>
            <CriticalResidueWeight>2000</CriticalResidueWeight>
            <OptimumDecompTemp>20</OptimumDecompTemp>
            <MaxCumulativeEOS>20</MaxCumulativeEOS>
            <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
            <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
            <TotalLeachRain>25</TotalLeachRain>
            <MinRainToLeach>10</MinRainToLeach>
            <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
            <DefaultCPRatio>0</DefaultCPRatio>
            <DefaultStandingFraction>0</DefaultStandingFraction>
            <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
            <FractionFaecesAdded>0.5</FractionFaecesAdded>
          </SurfaceOrganicMatter>
          <Soil>
            <Name>Soil</Name>
            <Analysis>
              <Name>Analysis</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Rocks>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </Rocks>
              <Texture />
              <MunsellColour />
              <PH>
                <double>6</double>
                <double>6</double>
                <double>6</double>
                <double>6</double>
              </PH>
              <CEC>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </CEC>
              <ParticleSizeSand>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </ParticleSizeSand>
              <ParticleSizeSilt>
                <double>30</double>
                <double>30</double>
                <double>30</double>
                <double>30</double>
              </ParticleSizeSilt>
              <ParticleSizeClay>
                <double>60</double>
                <double>60</double>
                <double>60</double>
                <double>60</double>
              </ParticleSizeClay>
              <PHUnits>Water</PHUnits>
              <BoronUnits>HotWater</BoronUnits>
            </Analysis>
            <Water>
              <Name>Water</Name>
              <SoilCrop>
                <Name>RyegrassSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <SoilCrop>
                <Name>WhiteCloverSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <BD>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
              </BD>
              <AirDry>
                <double>0.05</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </AirDry>
              <LL15>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL15>
              <DUL>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
              </DUL>
              <SAT>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
              </SAT>
              <KS>
                <double>500</double>
                <double>500</double>
                <double>500</double>
                <double>500</double>
              </KS>
            </Water>
            <SoilWater>
              <Name>SoilWater</Name>
              <SummerDate>1-Nov</SummerDate>
              <SummerU>6</SummerU>
              <SummerCona>3.5</SummerCona>
              <WinterDate>1-apr</WinterDate>
              <WinterU>6</WinterU>
              <WinterCona>3.5</WinterCona>
              <DiffusConst>88</DiffusConst>
              <DiffusSlope>35</DiffusSlope>
              <Salb>0.13</Salb>
              <CN2Bare>73</CN2Bare>
              <CNRed>20</CNRed>
              <CNCov>0.8</CNCov>
              <slope>0</slope>
              <discharge_width>0</discharge_width>
              <catchment_area>0</catchment_area>
              <max_pond>0</max_pond>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <SWCON>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
              </SWCON>
              <KLAT>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </KLAT>
              <residueinterception>0</residueinterception>
            </SoilWater>
            <SoilNitrogen>
              <Name>SoilNitrogen</Name>
              <fom_type>
                <string>default</string>
                <string>manure</string>
                <string>mucuna</string>
                <string>lablab</string>
                <string>shemp</string>
                <string>stable</string>
              </fom_type>
              <fract_carb>
                <double>0.2</double>
                <double>0.3</double>
                <double>0.54</double>
                <double>0.57</double>
                <double>0.45</double>
                <double>0</double>
              </fract_carb>
              <fract_cell>
                <double>0.7</double>
                <double>0.3</double>
                <double>0.37</double>
                <double>0.37</double>
                <double>0.47</double>
                <double>0.1</double>
              </fract_cell>
              <fract_lign>
                <double>0.1</double>
                <double>0.4</double>
                <double>0.09</double>
                <double>0.06</double>
                <double>0.08</double>
                <double>0.9</double>
              </fract_lign>
              <wfpsN2N2O_x>
                <double>22</double>
                <double>88</double>
              </wfpsN2N2O_x>
              <wfpsN2N2O_y>
                <double>0.1</double>
                <double>1</double>
              </wfpsN2N2O_y>
              <oc>
                <double>3.7136764881329496</double>
                <double>2.4698281813043792</double>
                <double>1.2383961716086014</double>
                <double>0.49836009167083023</double>
              </oc>
            </SoilNitrogen>
            <SoilOrganicMatter>
              <Name>SoilOrganicMatter</Name>
              <RootCN>40</RootCN>
              <RootWt>0</RootWt>
              <SoilCN>12</SoilCN>
              <EnrACoeff>7.4</EnrACoeff>
              <EnrBCoeff>0.2</EnrBCoeff>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Depth>
                <string>0-15</string>
                <string>15-30</string>
                <string>30-45</string>
                <string>45-60</string>
              </Depth>
              <OC>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </OC>
              <FBiom>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FBiom>
              <FInert>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FInert>
              <OCUnits>Total</OCUnits>
            </SoilOrganicMatter>
            <InitialWater>
              <Name>Initial water</Name>
              <PercentMethod>EvenlyDistributed</PercentMethod>
              <FractionFull>0.95</FractionFull>
              <DepthWetSoil>NaN</DepthWetSoil>
            </InitialWater>
            <Sample>
              <Name>Initial nitrogen</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <NO3>
                <double>15</double>
                <double>15</double>
                <double>15</double>
                <double>15</double>
              </NO3>
              <NH4>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </NH4>
              <NO3Units>ppm</NO3Units>
              <NH4Units>ppm</NH4Units>
              <SWUnits>Volumetric</SWUnits>
              <OCUnits>Total</OCUnits>
              <PHUnits>Water</PHUnits>
            </Sample>
            <CERESSoilTemperature>
              <Name>CERESSoilTemperature</Name>
            </CERESSoilTemperature>
            <RecordNumber>0</RecordNumber>
            <SoilType />
            <LocalName>Stores lots of water</LocalName>
            <Site>Made up</Site>
            <NearestTown />
            <Region />
            <Country />
            <NaturalVegetation />
            <Latitude>0</Latitude>
            <Longitude>0</Longitude>
          </Soil>
          <SoluteManager>
            <Name>SoluteManager</Name>
          </SoluteManager>
          <Report>
            <Name>Results</Name>
            <ExperimentFactorNames />
            <ExperimentFactorValues />
            <VariableNames>
              <string>[Clock].Today as Date</string>
              <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
              <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
              <string>[Irrigation].IrrigationApplied as Irrigation</string>
              <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
            </VariableNames>
            <EventNames>
              <string>[Clock].EndOfDay</string>
            </EventNames>
          </Report>
          <Area>1</Area>
          <Slope>0</Slope>
        </Zone>
        <Folder>
          <Name>Herbage</Name>
          <Graph>
            <Name>PlantWt</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>PlantMass</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>Harvested</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>Harvested</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>true</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterDemand</Name>
            <Series>
              <Name>Demand</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SW_Demand</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterUptake</Name>
            <Series>
              <Name>Uptake</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-1663232</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SW_Uptake</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterStress</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>glfWater</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>NStress</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>glfNitrogen</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>SoilWater</Name>
            <Series>
              <Name>Water</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SoilWater</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>SoilNitrogen</Name>
            <Series>
              <Name>Nitrogen</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SoilNitrogen</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
        </Folder>
      </Simulation>
      <Folder>
        <Name>Plots</Name>
        <Graph>
          <Name>PlantWt</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>PlantMass</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>2600</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>Harvested</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Harvested</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWaterZone0</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWaterZone1</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogenZone0</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>150</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogenZone1</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>150</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationAppliedZone0</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationAppliedZone1</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserAppliedZone0</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserAppliedZone1</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
      </Folder>
    </Experiment>
  </Folder>
  <Folder>
    <Name>CheckNitrogen</Name>
    <Experiment>
      <Name>NumZonesNitrogen</Name>
      <Factors>
        <Name>Factors</Name>
        <Factor>
          <Name>NumOfZones</Name>
          <Specifications>
            <string>[DoRootsSingle].Script.Zone1Prop=0.0,0.25,0.5,0.75,1.0</string>
          </Specifications>
        </Factor>
      </Factors>
      <Simulation>
        <Name>BaseNitrogen</Name>
        <Clock>
          <Name>Clock</Name>
          <StartDate>2000-01-01T00:00:00</StartDate>
          <EndDate>2000-12-31T00:00:00</EndDate>
        </Clock>
        <ControlledEnvironment>
          <Name>ControlledEnvironment</Name>
          <MaxT>25</MaxT>
          <MinT>15</MinT>
          <Rain>0</Rain>
          <Radn>25</Radn>
          <PanEvap>0</PanEvap>
          <VP>17</VP>
          <Wind>3</Wind>
          <CO2>350</CO2>
          <AirPressure>1010</AirPressure>
          <Latitude>0</Latitude>
          <DayLength>12</DayLength>
        </ControlledEnvironment>
        <SoilArbitrator>
          <Name>SoilArbitrator</Name>
        </SoilArbitrator>
        <Summary>
          <Name>Summary</Name>
        </Summary>
        <Zone>
          <Name>Zone0</Name>
          <Folder>
            <Name>Managers</Name>
            <Manager>
              <Name>DoRootsSingle</Name>
              <Script>
                <Zone0Depth>600</Zone0Depth>
                <Zone0Mass>500</Zone0Mass>
                <Zone1Name>Zone1</Zone1Name>
                <Zone1Prop>0</Zone1Prop>
                <Zone2Name>Zone2</Zone2Name>
                <Zone2Prop>0</Zone2Prop>
                <Zone3Name>Zone3</Zone3Name>
                <Zone3Prop>0</Zone3Prop>
              </Script>
              <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double Zone0Depth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double Zone0Mass { get; set; }

		[Description("Name of the first zone: ")] public string Zone1Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone1Prop { get; set; }

		[Description("Name of the second zone: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone2Prop { get; set; }

		[Description("Name of the third zone: ")] public string Zone3Name { get; set; }
		[Description("Proportionate depth and mass in the first zone (-): ")]  public double Zone3Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					//double test = species.RootWt;
					if (Zone1Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone1Prop * Zone0Depth, rootDM: Zone1Prop * Zone0Mass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone2Prop * Zone0Depth, rootDM: Zone2Prop * Zone0Mass, specificRootLength: 100);
					if (Zone3Prop > 0)
						species.AddZone(zoneName: Zone1Name, rootDepth: Zone3Prop * Zone0Depth, rootDM: Zone3Prop * Zone0Mass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
            </Manager>
            <Manager>
              <Name>CutRotationSingle</Name>
              <Script>
                <CutRotationStartDate>1900-07-01</CutRotationStartDate>
                <CutRotationEndDate>2100-12-31</CutRotationEndDate>
                <CutInterval>1</CutInterval>
                <IntervalType>FixedInterval</IntervalType>
                <DurationOfCut>1</DurationOfCut>
                <RemoveAmountType>ResidualDM</RemoveAmountType>
                <AmountGiven>2250</AmountGiven>
                <DMRemoveType>RemoveAll</DMRemoveType>
                <FractionN2Remove>1</FractionN2Remove>
                <ProportionN2Dung>0</ProportionN2Dung>
              </Script>
              <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticFertiliser</Name>
              <Script>
                <AllowFertiliser>no</AllowFertiliser>
                <Depth2SoilN>600</Depth2SoilN>
                <CriticalSoilN>100</CriticalSoilN>
                <FertNAmount>50</FertNAmount>
                <FertType>UreaN</FertType>
                <FertApplicationDepth>1</FertApplicationDepth>
                <FertMinimumDays>1</FertMinimumDays>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticIrrigation</Name>
              <Script>
                <allowIrrigation>yes</allowIrrigation>
                <allowIrrigationAll>yes</allowIrrigationAll>
                <seasonStart>1-Jan</seasonStart>
                <seasonEnd>31-Dec</seasonEnd>
                <seasonsAllocation>10000</seasonsAllocation>
                <triggerDeficit>99</triggerDeficit>
                <targetDeficit>100</targetDeficit>
                <returndays>1</returndays>
                <maximumAmount>5</maximumAmount>
                <depthPAWC>600</depthPAWC>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
            </Manager>
          </Folder>
          <MicroClimate>
            <Name>MicroClimate</Name>
            <a_interception>0</a_interception>
            <b_interception>1</b_interception>
            <c_interception>0</c_interception>
            <d_interception>0</d_interception>
            <soil_albedo>0.23</soil_albedo>
            <sun_angle>15</sun_angle>
            <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
            <night_interception_fraction>0.5</night_interception_fraction>
            <refheight>2</refheight>
            <albedo>0.15</albedo>
            <emissivity>0.96</emissivity>
            <RadIntTotal>0</RadIntTotal>
          </MicroClimate>
          <Irrigation>
            <Name>Irrigation</Name>
          </Irrigation>
          <Fertiliser>
            <Name>Fertiliser</Name>
          </Fertiliser>
          <SurfaceOrganicMatter>
            <Name>SurfaceOrganicMatter</Name>
            <PondActive>no</PondActive>
            <ReportAdditions>no</ReportAdditions>
            <ReportRemovals>no</ReportRemovals>
            <ResidueTypes>
              <Name>ResidueTypes</Name>
              <LoadFromResource>ResidueTypes</LoadFromResource>
            </ResidueTypes>
            <TillageTypes>
              <Name>TillageTypesList</Name>
              <TillageType />
            </TillageTypes>
            <Pools>
              <Pool>
                <PoolName>Sward</PoolName>
                <ResidueType>grass</ResidueType>
                <Mass>0</Mass>
                <CNRatio>15</CNRatio>
                <CPRatio>NaN</CPRatio>
                <StandingFraction>0</StandingFraction>
              </Pool>
            </Pools>
            <PoolName>Sward</PoolName>
            <type>grass</type>
            <mass>0</mass>
            <standing_fraction>0</standing_fraction>
            <cpr />
            <cnr>15</cnr>
            <CriticalResidueWeight>2000</CriticalResidueWeight>
            <OptimumDecompTemp>20</OptimumDecompTemp>
            <MaxCumulativeEOS>20</MaxCumulativeEOS>
            <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
            <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
            <TotalLeachRain>25</TotalLeachRain>
            <MinRainToLeach>10</MinRainToLeach>
            <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
            <DefaultCPRatio>0</DefaultCPRatio>
            <DefaultStandingFraction>0</DefaultStandingFraction>
            <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
            <FractionFaecesAdded>0.5</FractionFaecesAdded>
          </SurfaceOrganicMatter>
          <Soil>
            <Name>Soil</Name>
            <Analysis>
              <Name>Analysis</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Rocks>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </Rocks>
              <Texture />
              <MunsellColour />
              <PH>
                <double>6</double>
                <double>6</double>
                <double>6</double>
                <double>6</double>
              </PH>
              <CEC>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </CEC>
              <ParticleSizeSand>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </ParticleSizeSand>
              <ParticleSizeSilt>
                <double>30</double>
                <double>30</double>
                <double>30</double>
                <double>30</double>
              </ParticleSizeSilt>
              <ParticleSizeClay>
                <double>60</double>
                <double>60</double>
                <double>60</double>
                <double>60</double>
              </ParticleSizeClay>
              <PHUnits>Water</PHUnits>
              <BoronUnits>HotWater</BoronUnits>
            </Analysis>
            <Water>
              <Name>Water</Name>
              <SoilCrop>
                <Name>RyegrassSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <SoilCrop>
                <Name>WhiteCloverSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <BD>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
              </BD>
              <AirDry>
                <double>0.05</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </AirDry>
              <LL15>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL15>
              <DUL>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
              </DUL>
              <SAT>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
              </SAT>
              <KS>
                <double>500</double>
                <double>500</double>
                <double>500</double>
                <double>500</double>
              </KS>
            </Water>
            <SoilWater>
              <Name>SoilWater</Name>
              <SummerDate>1-Nov</SummerDate>
              <SummerU>6</SummerU>
              <SummerCona>3.5</SummerCona>
              <WinterDate>1-apr</WinterDate>
              <WinterU>6</WinterU>
              <WinterCona>3.5</WinterCona>
              <DiffusConst>88</DiffusConst>
              <DiffusSlope>35</DiffusSlope>
              <Salb>0.13</Salb>
              <CN2Bare>73</CN2Bare>
              <CNRed>20</CNRed>
              <CNCov>0.8</CNCov>
              <slope>0</slope>
              <discharge_width>0</discharge_width>
              <catchment_area>0</catchment_area>
              <max_pond>0</max_pond>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <SWCON>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
              </SWCON>
              <KLAT>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </KLAT>
              <residueinterception>0</residueinterception>
            </SoilWater>
            <SoilNitrogen>
              <Name>SoilNitrogen</Name>
              <fom_type>
                <string>default</string>
                <string>manure</string>
                <string>mucuna</string>
                <string>lablab</string>
                <string>shemp</string>
                <string>stable</string>
              </fom_type>
              <fract_carb>
                <double>0.2</double>
                <double>0.3</double>
                <double>0.54</double>
                <double>0.57</double>
                <double>0.45</double>
                <double>0</double>
              </fract_carb>
              <fract_cell>
                <double>0.7</double>
                <double>0.3</double>
                <double>0.37</double>
                <double>0.37</double>
                <double>0.47</double>
                <double>0.1</double>
              </fract_cell>
              <fract_lign>
                <double>0.1</double>
                <double>0.4</double>
                <double>0.09</double>
                <double>0.06</double>
                <double>0.08</double>
                <double>0.9</double>
              </fract_lign>
              <wfpsN2N2O_x>
                <double>22</double>
                <double>88</double>
              </wfpsN2N2O_x>
              <wfpsN2N2O_y>
                <double>0.1</double>
                <double>1</double>
              </wfpsN2N2O_y>
              <oc>
                <double>3.7136764881329496</double>
                <double>2.4698281813043792</double>
                <double>1.2383961716086014</double>
                <double>0.49836009167083023</double>
              </oc>
            </SoilNitrogen>
            <SoilOrganicMatter>
              <Name>SoilOrganicMatter</Name>
              <RootCN>40</RootCN>
              <RootWt>0</RootWt>
              <SoilCN>12</SoilCN>
              <EnrACoeff>7.4</EnrACoeff>
              <EnrBCoeff>0.2</EnrBCoeff>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Depth>
                <string>0-15</string>
                <string>15-30</string>
                <string>30-45</string>
                <string>45-60</string>
              </Depth>
              <OC>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </OC>
              <FBiom>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FBiom>
              <FInert>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FInert>
              <OCUnits>Total</OCUnits>
            </SoilOrganicMatter>
            <InitialWater>
              <Name>Initial water</Name>
              <PercentMethod>EvenlyDistributed</PercentMethod>
              <FractionFull>0.95</FractionFull>
              <DepthWetSoil>NaN</DepthWetSoil>
            </InitialWater>
            <Sample>
              <Name>Initial nitrogen</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <NO3>
                <double>15</double>
                <double>15</double>
                <double>15</double>
                <double>15</double>
              </NO3>
              <NH4>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </NH4>
              <NO3Units>ppm</NO3Units>
              <NH4Units>ppm</NH4Units>
              <SWUnits>Volumetric</SWUnits>
              <OCUnits>Total</OCUnits>
              <PHUnits>Water</PHUnits>
            </Sample>
            <CERESSoilTemperature>
              <Name>CERESSoilTemperature</Name>
            </CERESSoilTemperature>
            <RecordNumber>0</RecordNumber>
            <SoilType />
            <LocalName>Stores lots of water</LocalName>
            <Site>Made up</Site>
            <NearestTown />
            <Region />
            <Country />
            <NaturalVegetation />
            <Latitude>0</Latitude>
            <Longitude>0</Longitude>
          </Soil>
          <SoluteManager>
            <Name>SoluteManager</Name>
          </SoluteManager>
          <PastureSpecies>
            <Name>Ryegrass</Name>
            <MaximumNUptake>10</MaximumNUptake>
            <Albedo>0.26</Albedo>
            <Gsmax>0.011</Gsmax>
            <R50>200</R50>
            <SpeciesFamily>Grass</SpeciesFamily>
            <PhotosyntheticPathway>C3</PhotosyntheticPathway>
            <InitialShootDM>2500</InitialShootDM>
            <InitialRootDM>500</InitialRootDM>
            <InitialRootDepth>600</InitialRootDepth>
            <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
            <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
            <GrowthTminimum>1</GrowthTminimum>
            <GrowthToptimum>20</GrowthToptimum>
            <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
            <UseHeatStressFactor>yes</UseHeatStressFactor>
            <HeatOnsetTemperature>28</HeatOnsetTemperature>
            <HeatFullTemperature>35</HeatFullTemperature>
            <HeatRecoverySumDD>30</HeatRecoverySumDD>
            <HeatRecoveryTReference>25</HeatRecoveryTReference>
            <UseColdStressFactor>yes</UseColdStressFactor>
            <ColdOnsetTemperature>1</ColdOnsetTemperature>
            <ColdFullTemperature>-5</ColdFullTemperature>
            <ColdRecoverySumDD>25</ColdRecoverySumDD>
            <ColdRecoveryTReference>0</ColdRecoveryTReference>
            <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
            <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
            <RespirationTReference>20</RespirationTReference>
            <RespirationExponent>1.5</RespirationExponent>
            <NThresholdsForLeaves>
              <double>0.04</double>
              <double>0.012</double>
              <double>0.05</double>
            </NThresholdsForLeaves>
            <NThresholdsForStems>
              <double>0.02</double>
              <double>0.006</double>
              <double>0.025</double>
            </NThresholdsForStems>
            <NThresholdsForStolons>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NThresholdsForStolons>
            <NThresholdsForRoots>
              <double>0.02</double>
              <double>0.006</double>
              <double>0.025</double>
            </NThresholdsForRoots>
            <DegreesDayForGermination>125</DegreesDayForGermination>
            <TargetShootRootRatio>4</TargetShootRootRatio>
            <MaxRootAllocation>0.25</MaxRootAllocation>
            <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
            <UseReproSeasonFactor>yes</UseReproSeasonFactor>
            <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
            <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
            <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
            <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
            <FractionLeafMaximum>0.7</FractionLeafMaximum>
            <FractionLeafMinimum>0.7</FractionLeafMinimum>
            <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
            <FractionLeafDMFactor>2000</FractionLeafDMFactor>
            <FractionLeafExponent>3</FractionLeafExponent>
            <FractionToStolon>0</FractionToStolon>
            <SpecificLeafArea>25</SpecificLeafArea>
            <SpecificRootLength>100</SpecificRootLength>
            <StolonEffectOnLAI>0</StolonEffectOnLAI>
            <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
            <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
            <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
            <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
            <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
            <DetachmentRateShoot>0.08</DetachmentRateShoot>
            <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
            <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
            <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
            <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
            <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
            <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
            <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
            <FractionNLuxuryRemobilisable>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </FractionNLuxuryRemobilisable>
            <MinimumNFixation>0</MinimumNFixation>
            <MaximumNFixation>0</MaximumNFixation>
            <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
            <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
            <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
            <NDillutionCoefficient>0.25</NDillutionCoefficient>
            <GlfGeneric>1</GlfGeneric>
            <GlfSoilFertility>1</GlfSoilFertility>
            <PlantHeightMinimum>25</PlantHeightMinimum>
            <PlantHeightMaximum>600</PlantHeightMaximum>
            <PlantHeightMassForMax>10000</PlantHeightMassForMax>
            <PlantHeightExponent>2.8</PlantHeightExponent>
            <RootDepthMinimum>50</RootDepthMinimum>
            <RootDepthMaximum>750</RootDepthMaximum>
            <RootElongationRate>25</RootElongationRate>
            <RootDistributionDepthParam>90</RootDistributionDepthParam>
            <RootDistributionExponent>3.2</RootDistributionExponent>
            <DigestibilitiesCellWall>
              <double>0.6</double>
              <double>0.6</double>
              <double>0.6</double>
              <double>0.2</double>
            </DigestibilitiesCellWall>
            <MinimumGreenWt>100</MinimumGreenWt>
            <FractionStolonStanding>0</FractionStolonStanding>
            <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
            <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
            <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
            <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
          </PastureSpecies>
          <Report>
            <Name>Results</Name>
            <ExperimentFactorNames />
            <ExperimentFactorValues />
            <VariableNames>
              <string>[Clock].Today as Date</string>
              <string>[Ryegrass].AboveGroundWt as PlantMass</string>
              <string>[Ryegrass].HarvestedWt as Harvested</string>
              <string>[Ryegrass].WaterDemand as SW_Demand</string>
              <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
              <string>[Ryegrass].GlfWaterSupply as glfWater</string>
              <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
              <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
              <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
              <string>[Irrigation].IrrigationApplied as Irrigation</string>
              <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
            </VariableNames>
            <EventNames>
              <string>[Clock].EndOfDay</string>
            </EventNames>
          </Report>
          <Area>1</Area>
          <Slope>0</Slope>
        </Zone>
        <Zone>
          <Name>Zone1</Name>
          <Folder>
            <Name>Managers</Name>
            <Manager>
              <Name>AutomaticFertiliser</Name>
              <Script>
                <AllowFertiliser>no</AllowFertiliser>
                <Depth2SoilN>600</Depth2SoilN>
                <CriticalSoilN>100</CriticalSoilN>
                <FertNAmount>50</FertNAmount>
                <FertType>UreaN</FertType>
                <FertApplicationDepth>1</FertApplicationDepth>
                <FertMinimumDays>1</FertMinimumDays>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
            </Manager>
            <Manager>
              <Name>AutomaticIrrigation</Name>
              <Script>
                <allowIrrigation>yes</allowIrrigation>
                <allowIrrigationAll>yes</allowIrrigationAll>
                <seasonStart>1-Jan</seasonStart>
                <seasonEnd>31-Dec</seasonEnd>
                <seasonsAllocation>10000</seasonsAllocation>
                <triggerDeficit>99</triggerDeficit>
                <targetDeficit>100</targetDeficit>
                <returndays>1</returndays>
                <maximumAmount>5</maximumAmount>
                <depthPAWC>600</depthPAWC>
              </Script>
              <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
            </Manager>
          </Folder>
          <MicroClimate>
            <Name>MicroClimate</Name>
            <a_interception>0</a_interception>
            <b_interception>1</b_interception>
            <c_interception>0</c_interception>
            <d_interception>0</d_interception>
            <soil_albedo>0.23</soil_albedo>
            <sun_angle>15</sun_angle>
            <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
            <night_interception_fraction>0.5</night_interception_fraction>
            <refheight>2</refheight>
            <albedo>0.15</albedo>
            <emissivity>0.96</emissivity>
            <RadIntTotal>0</RadIntTotal>
          </MicroClimate>
          <Irrigation>
            <Name>Irrigation</Name>
          </Irrigation>
          <Fertiliser>
            <Name>Fertiliser</Name>
          </Fertiliser>
          <SurfaceOrganicMatter>
            <Name>SurfaceOrganicMatter</Name>
            <PondActive>no</PondActive>
            <ReportAdditions>no</ReportAdditions>
            <ReportRemovals>no</ReportRemovals>
            <ResidueTypes>
              <Name>ResidueTypes</Name>
              <LoadFromResource>ResidueTypes</LoadFromResource>
            </ResidueTypes>
            <TillageTypes>
              <Name>TillageTypesList</Name>
              <TillageType />
            </TillageTypes>
            <Pools>
              <Pool>
                <PoolName>Sward</PoolName>
                <ResidueType>grass</ResidueType>
                <Mass>0</Mass>
                <CNRatio>15</CNRatio>
                <CPRatio>NaN</CPRatio>
                <StandingFraction>0</StandingFraction>
              </Pool>
            </Pools>
            <PoolName>Sward</PoolName>
            <type>grass</type>
            <mass>0</mass>
            <standing_fraction>0</standing_fraction>
            <cpr />
            <cnr>15</cnr>
            <CriticalResidueWeight>2000</CriticalResidueWeight>
            <OptimumDecompTemp>20</OptimumDecompTemp>
            <MaxCumulativeEOS>20</MaxCumulativeEOS>
            <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
            <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
            <TotalLeachRain>25</TotalLeachRain>
            <MinRainToLeach>10</MinRainToLeach>
            <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
            <DefaultCPRatio>0</DefaultCPRatio>
            <DefaultStandingFraction>0</DefaultStandingFraction>
            <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
            <FractionFaecesAdded>0.5</FractionFaecesAdded>
          </SurfaceOrganicMatter>
          <Soil>
            <Name>Soil</Name>
            <Analysis>
              <Name>Analysis</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Rocks>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </Rocks>
              <Texture />
              <MunsellColour />
              <PH>
                <double>6</double>
                <double>6</double>
                <double>6</double>
                <double>6</double>
              </PH>
              <CEC>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </CEC>
              <ParticleSizeSand>
                <double>10</double>
                <double>10</double>
                <double>10</double>
                <double>10</double>
              </ParticleSizeSand>
              <ParticleSizeSilt>
                <double>30</double>
                <double>30</double>
                <double>30</double>
                <double>30</double>
              </ParticleSizeSilt>
              <ParticleSizeClay>
                <double>60</double>
                <double>60</double>
                <double>60</double>
                <double>60</double>
              </ParticleSizeClay>
              <PHUnits>Water</PHUnits>
              <BoronUnits>HotWater</BoronUnits>
            </Analysis>
            <Water>
              <Name>Water</Name>
              <SoilCrop>
                <Name>RyegrassSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <SoilCrop>
                <Name>WhiteCloverSoil</Name>
                <LL>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                  <double>0.1</double>
                </LL>
                <KL>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                  <double>0.05</double>
                </KL>
                <XF>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                  <double>1</double>
                </XF>
              </SoilCrop>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <BD>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
                <double>1.3</double>
              </BD>
              <AirDry>
                <double>0.05</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </AirDry>
              <LL15>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL15>
              <DUL>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
                <double>0.45</double>
              </DUL>
              <SAT>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
                <double>0.5</double>
              </SAT>
              <KS>
                <double>500</double>
                <double>500</double>
                <double>500</double>
                <double>500</double>
              </KS>
            </Water>
            <SoilWater>
              <Name>SoilWater</Name>
              <SummerDate>1-Nov</SummerDate>
              <SummerU>6</SummerU>
              <SummerCona>3.5</SummerCona>
              <WinterDate>1-apr</WinterDate>
              <WinterU>6</WinterU>
              <WinterCona>3.5</WinterCona>
              <DiffusConst>88</DiffusConst>
              <DiffusSlope>35</DiffusSlope>
              <Salb>0.13</Salb>
              <CN2Bare>73</CN2Bare>
              <CNRed>20</CNRed>
              <CNCov>0.8</CNCov>
              <slope>0</slope>
              <discharge_width>0</discharge_width>
              <catchment_area>0</catchment_area>
              <max_pond>0</max_pond>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <SWCON>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
                <double>0.3</double>
              </SWCON>
              <KLAT>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </KLAT>
              <residueinterception>0</residueinterception>
            </SoilWater>
            <SoilNitrogen>
              <Name>SoilNitrogen</Name>
              <fom_type>
                <string>default</string>
                <string>manure</string>
                <string>mucuna</string>
                <string>lablab</string>
                <string>shemp</string>
                <string>stable</string>
              </fom_type>
              <fract_carb>
                <double>0.2</double>
                <double>0.3</double>
                <double>0.54</double>
                <double>0.57</double>
                <double>0.45</double>
                <double>0</double>
              </fract_carb>
              <fract_cell>
                <double>0.7</double>
                <double>0.3</double>
                <double>0.37</double>
                <double>0.37</double>
                <double>0.47</double>
                <double>0.1</double>
              </fract_cell>
              <fract_lign>
                <double>0.1</double>
                <double>0.4</double>
                <double>0.09</double>
                <double>0.06</double>
                <double>0.08</double>
                <double>0.9</double>
              </fract_lign>
              <wfpsN2N2O_x>
                <double>22</double>
                <double>88</double>
              </wfpsN2N2O_x>
              <wfpsN2N2O_y>
                <double>0.1</double>
                <double>1</double>
              </wfpsN2N2O_y>
              <oc>
                <double>3.7136764881329496</double>
                <double>2.4698281813043792</double>
                <double>1.2383961716086014</double>
                <double>0.49836009167083023</double>
              </oc>
            </SoilNitrogen>
            <SoilOrganicMatter>
              <Name>SoilOrganicMatter</Name>
              <RootCN>40</RootCN>
              <RootWt>0</RootWt>
              <SoilCN>12</SoilCN>
              <EnrACoeff>7.4</EnrACoeff>
              <EnrBCoeff>0.2</EnrBCoeff>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <Depth>
                <string>0-15</string>
                <string>15-30</string>
                <string>30-45</string>
                <string>45-60</string>
              </Depth>
              <OC>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </OC>
              <FBiom>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FBiom>
              <FInert>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </FInert>
              <OCUnits>Total</OCUnits>
            </SoilOrganicMatter>
            <InitialWater>
              <Name>Initial water</Name>
              <PercentMethod>EvenlyDistributed</PercentMethod>
              <FractionFull>0.95</FractionFull>
              <DepthWetSoil>NaN</DepthWetSoil>
            </InitialWater>
            <Sample>
              <Name>Initial nitrogen</Name>
              <Thickness>
                <double>150</double>
                <double>150</double>
                <double>150</double>
                <double>150</double>
              </Thickness>
              <NO3>
                <double>15</double>
                <double>15</double>
                <double>15</double>
                <double>15</double>
              </NO3>
              <NH4>
                <double>0</double>
                <double>0</double>
                <double>0</double>
                <double>0</double>
              </NH4>
              <NO3Units>ppm</NO3Units>
              <NH4Units>ppm</NH4Units>
              <SWUnits>Volumetric</SWUnits>
              <OCUnits>Total</OCUnits>
              <PHUnits>Water</PHUnits>
            </Sample>
            <CERESSoilTemperature>
              <Name>CERESSoilTemperature</Name>
            </CERESSoilTemperature>
            <RecordNumber>0</RecordNumber>
            <SoilType />
            <LocalName>Stores lots of water</LocalName>
            <Site>Made up</Site>
            <NearestTown />
            <Region />
            <Country />
            <NaturalVegetation />
            <Latitude>0</Latitude>
            <Longitude>0</Longitude>
          </Soil>
          <SoluteManager>
            <Name>SoluteManager</Name>
          </SoluteManager>
          <Report>
            <Name>Results</Name>
            <ExperimentFactorNames />
            <ExperimentFactorValues />
            <VariableNames>
              <string>[Clock].Today as Date</string>
              <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
              <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
              <string>[Irrigation].IrrigationApplied as Irrigation</string>
              <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
            </VariableNames>
            <EventNames>
              <string>[Clock].EndOfDay</string>
            </EventNames>
          </Report>
          <Area>1</Area>
          <Slope>0</Slope>
        </Zone>
        <Folder>
          <Name>Herbage</Name>
          <Graph>
            <Name>PlantWt</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>PlantMass</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>Harvested</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>Harvested</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>true</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterDemand</Name>
            <Series>
              <Name>Demand</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SW_Demand</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterUptake</Name>
            <Series>
              <Name>Uptake</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-1663232</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SW_Uptake</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>WaterStress</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>glfWater</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>NStress</Name>
            <Series>
              <Name>Ryegrass</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>glfNitrogen</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>SoilWater</Name>
            <Series>
              <Name>Water</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SoilWater</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
          <Graph>
            <Name>SoilNitrogen</Name>
            <Series>
              <Name>Nitrogen</Name>
              <Type>Scatter</Type>
              <XAxis>Bottom</XAxis>
              <YAxis>Left</YAxis>
              <ColourArgb>-16736653</ColourArgb>
              <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
              <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
              <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
              <Marker>None</Marker>
              <MarkerSize>Normal</MarkerSize>
              <Line>Solid</Line>
              <LineThickness>Normal</LineThickness>
              <TableName>Results</TableName>
              <XFieldName>Date</XFieldName>
              <YFieldName>SoilNitrogen</YFieldName>
              <ShowInLegend>true</ShowInLegend>
              <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
              <Cumulative>false</Cumulative>
              <CumulativeX>false</CumulativeX>
            </Series>
            <Axis>
              <Type>Left</Type>
              <Title />
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <Axis>
              <Type>Bottom</Type>
              <Inverted>false</Inverted>
              <Minimum>NaN</Minimum>
              <Maximum>NaN</Maximum>
              <Interval>NaN</Interval>
            </Axis>
            <LegendPosition>TopRight</LegendPosition>
            <DisabledSeries />
            <IncludeInDocumentation>false</IncludeInDocumentation>
          </Graph>
        </Folder>
      </Simulation>
      <Folder>
        <Name>Plots</Name>
        <Graph>
          <Name>PlantWt</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>PlantMass</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>2600</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>Harvested</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Harvested</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWaterZone0</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWaterZone1</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogenZone0</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>150</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogenZone1</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>150</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationAppliedZone0</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationAppliedZone1</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserAppliedZone0</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone0'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserAppliedZone1</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter>[Zone] = 'Zone1'</Filter>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
      </Folder>
    </Experiment>
  </Folder>
  <Folder>
    <Name>AgP_3Zone_UnequalRootsAndN</Name>
    <Memo>
      <Name>Memo</Name>
      <MemoText><![CDATA[Both simulations have three zones with a ryegrass, lots of irrigation and no fertiliser.  The roots from the ryegrass in Zone1 has roots on Zone0 and Zone2 but the ryegrasses in Zone0 and Zone2 only have roots in their own zone.  In Sim2 all the soils start off with 30 kg N and in Sim3 Zone0 starts with about 100 kg N]]></MemoText>
    </Memo>
    <Simulation>
      <Name>ThreeZoneSim2</Name>
      <Clock>
        <Name>Clock</Name>
        <StartDate>2000-01-01T00:00:00</StartDate>
        <EndDate>2000-03-31T00:00:00</EndDate>
      </Clock>
      <ControlledEnvironment>
        <Name>ControlledEnvironment</Name>
        <MaxT>25</MaxT>
        <MinT>15</MinT>
        <Rain>0</Rain>
        <Radn>25</Radn>
        <PanEvap>0</PanEvap>
        <VP>17</VP>
        <Wind>3</Wind>
        <CO2>350</CO2>
        <AirPressure>1010</AirPressure>
        <Latitude>0</Latitude>
        <DayLength>12</DayLength>
      </ControlledEnvironment>
      <SoilArbitrator>
        <Name>SoilArbitrator</Name>
      </SoilArbitrator>
      <Summary>
        <Name>Summary</Name>
      </Summary>
      <Zone>
        <Name>Zone0</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>DoRootsThreeZone</Name>
            <Script>
              <RootDepth>600</RootDepth>
              <RootMass>500</RootMass>
              <Zone0Name>Zone0</Zone0Name>
              <Zone0Prop>0</Zone0Prop>
              <Zone2Name>Zone1</Zone2Name>
              <Zone2Prop>0</Zone2Prop>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
          </Manager>
          <Manager>
            <Name>CutRotationSingle</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>1</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>2250</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>6</WinterU>
            <WinterCona>3.5</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>5</double>
              <double>5</double>
              <double>5</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <PastureSpecies>
          <Name>Ryegrass</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>2500</InitialShootDM>
          <InitialRootDM>500</InitialRootDM>
          <InitialRootDepth>600</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Ryegrass].AboveGroundWt as PlantMass</string>
            <string>[Ryegrass].HarvestedWt as Harvested</string>
            <string>[Ryegrass].WaterDemand as SW_Demand</string>
            <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
            <string>[Ryegrass].GlfWaterSupply as glfWater</string>
            <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
            <string>[Irrigation].IrrigationApplied as Irrigation</string>
            <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Zone>
        <Name>Zone1</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>DoRootsThreeZone</Name>
            <Script>
              <RootDepth>600</RootDepth>
              <RootMass>500</RootMass>
              <Zone0Name>Zone0</Zone0Name>
              <Zone0Prop>0.3</Zone0Prop>
              <Zone2Name>Zone2</Zone2Name>
              <Zone2Prop>0.3</Zone2Prop>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
          </Manager>
          <Manager>
            <Name>CutRotationSingle</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>1</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>2250</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>6</WinterU>
            <WinterCona>3.5</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>5</double>
              <double>5</double>
              <double>5</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <PastureSpecies>
          <Name>Ryegrass</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>2500</InitialShootDM>
          <InitialRootDM>500</InitialRootDM>
          <InitialRootDepth>600</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Ryegrass].AboveGroundWt as PlantMass</string>
            <string>[Ryegrass].HarvestedWt as Harvested</string>
            <string>[Ryegrass].WaterDemand as SW_Demand</string>
            <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
            <string>[Ryegrass].GlfWaterSupply as glfWater</string>
            <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
            <string>[Irrigation].IrrigationApplied as Irrigation</string>
            <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Zone>
        <Name>Zone2</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>DoRootsThreeZone</Name>
            <Script>
              <RootDepth>600</RootDepth>
              <RootMass>500</RootMass>
              <Zone0Name>Zone1</Zone0Name>
              <Zone0Prop>0</Zone0Prop>
              <Zone2Name>Zone2</Zone2Name>
              <Zone2Prop>0</Zone2Prop>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
          </Manager>
          <Manager>
            <Name>CutRotationSingle</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>1</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>2250</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>6</WinterU>
            <WinterCona>3.5</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>5</double>
              <double>5</double>
              <double>5</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <PastureSpecies>
          <Name>Ryegrass</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>2500</InitialShootDM>
          <InitialRootDM>500</InitialRootDM>
          <InitialRootDepth>600</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Ryegrass].AboveGroundWt as PlantMass</string>
            <string>[Ryegrass].HarvestedWt as Harvested</string>
            <string>[Ryegrass].WaterDemand as SW_Demand</string>
            <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
            <string>[Ryegrass].GlfWaterSupply as glfWater</string>
            <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
            <string>[Irrigation].IrrigationApplied as Irrigation</string>
            <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Folder>
        <Name>SimPlots</Name>
        <Graph>
          <Name>PlantWt</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>PlantMass</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>2600</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>Harvested</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Harvested</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWater</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogen</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationApplied</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserApplied</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
      </Folder>
    </Simulation>
    <Simulation>
      <Name>ThreeZoneSim3</Name>
      <Clock>
        <Name>Clock</Name>
        <StartDate>2000-01-01T00:00:00</StartDate>
        <EndDate>2000-03-31T00:00:00</EndDate>
      </Clock>
      <ControlledEnvironment>
        <Name>ControlledEnvironment</Name>
        <MaxT>25</MaxT>
        <MinT>15</MinT>
        <Rain>0</Rain>
        <Radn>25</Radn>
        <PanEvap>0</PanEvap>
        <VP>17</VP>
        <Wind>3</Wind>
        <CO2>350</CO2>
        <AirPressure>1010</AirPressure>
        <Latitude>0</Latitude>
        <DayLength>12</DayLength>
      </ControlledEnvironment>
      <SoilArbitrator>
        <Name>SoilArbitrator</Name>
      </SoilArbitrator>
      <Summary>
        <Name>Summary</Name>
      </Summary>
      <Zone>
        <Name>Zone0</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>DoRootsThreeZone</Name>
            <Script>
              <RootDepth>600</RootDepth>
              <RootMass>500</RootMass>
              <Zone0Name>Zone0</Zone0Name>
              <Zone0Prop>0</Zone0Prop>
              <Zone2Name>Zone1</Zone2Name>
              <Zone2Prop>0</Zone2Prop>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
          </Manager>
          <Manager>
            <Name>CutRotationSingle</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>1</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>2250</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>6</WinterU>
            <WinterCona>3.5</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>15</double>
              <double>15</double>
              <double>15</double>
              <double>15</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <PastureSpecies>
          <Name>Ryegrass</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>2500</InitialShootDM>
          <InitialRootDM>500</InitialRootDM>
          <InitialRootDepth>600</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Ryegrass].AboveGroundWt as PlantMass</string>
            <string>[Ryegrass].HarvestedWt as Harvested</string>
            <string>[Ryegrass].WaterDemand as SW_Demand</string>
            <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
            <string>[Ryegrass].GlfWaterSupply as glfWater</string>
            <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
            <string>[Irrigation].IrrigationApplied as Irrigation</string>
            <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Zone>
        <Name>Zone1</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>DoRootsThreeZone</Name>
            <Script>
              <RootDepth>600</RootDepth>
              <RootMass>500</RootMass>
              <Zone0Name>Zone0</Zone0Name>
              <Zone0Prop>0.3</Zone0Prop>
              <Zone2Name>Zone2</Zone2Name>
              <Zone2Prop>0.3</Zone2Prop>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
          </Manager>
          <Manager>
            <Name>CutRotationSingle</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>1</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>2250</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>6</WinterU>
            <WinterCona>3.5</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>5</double>
              <double>5</double>
              <double>5</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <PastureSpecies>
          <Name>Ryegrass</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>2500</InitialShootDM>
          <InitialRootDM>500</InitialRootDM>
          <InitialRootDepth>600</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Ryegrass].AboveGroundWt as PlantMass</string>
            <string>[Ryegrass].HarvestedWt as Harvested</string>
            <string>[Ryegrass].WaterDemand as SW_Demand</string>
            <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
            <string>[Ryegrass].GlfWaterSupply as glfWater</string>
            <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
            <string>[Irrigation].IrrigationApplied as Irrigation</string>
            <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Zone>
        <Name>Zone2</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>DoRootsThreeZone</Name>
            <Script>
              <RootDepth>600</RootDepth>
              <RootMass>500</RootMass>
              <Zone0Name>Zone1</Zone0Name>
              <Zone0Prop>0</Zone0Prop>
              <Zone2Name>Zone2</Zone2Name>
              <Zone2Prop>0</Zone2Prop>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
          </Manager>
          <Manager>
            <Name>CutRotationSingle</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>1</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>2250</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }

		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }

		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }

		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }

		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }

		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }

		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }

		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }

		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }

		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
					PostHarvestDM = Pasture[0].StandingHerbageWt; //+ Pasture[1].StandingHerbageWt
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			PreHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
			
			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
				PostHarvestDM = Pasture[0].StandingHerbageWt;  //+ Pasture[1].StandingHerbageWt
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			double existingWt = Pasture[0].HarvestableWt;  // + Pasture[1].HarvestableWt

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				DefoliatedWt = Pasture[0].HarvestedWt;  // + Pasture[1].HarvestedWt
				DefoliatedN = Pasture[0].HarvestedN;  //+ Pasture[1].HarvestedN
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt;  //+ Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>6</WinterU>
            <WinterCona>3.5</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>5</double>
              <double>5</double>
              <double>5</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <PastureSpecies>
          <Name>Ryegrass</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>2500</InitialShootDM>
          <InitialRootDM>500</InitialRootDM>
          <InitialRootDepth>600</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Ryegrass].AboveGroundWt as PlantMass</string>
            <string>[Ryegrass].HarvestedWt as Harvested</string>
            <string>[Ryegrass].WaterDemand as SW_Demand</string>
            <string>sum([Ryegrass].WaterUptake) as SW_Uptake</string>
            <string>[Ryegrass].GlfWaterSupply as glfWater</string>
            <string>[Ryegrass].GlfNSupply as glfNitrogen</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
            <string>[Irrigation].IrrigationApplied as Irrigation</string>
            <string>[Fertiliser].NitrogenApplied as Fertiliser</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Folder>
        <Name>SimPlots</Name>
        <Graph>
          <Name>PlantWt</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>PlantMass</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>2600</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>Harvested</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Harvested</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>5</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NStress</Name>
          <Series>
            <Name>Ryegrass</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>glfNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>1.05</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilWater</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>50</Minimum>
            <Maximum>275</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogen</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>IrrigationApplied</Name>
          <Series>
            <Name>Irrigation</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Irrigation</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>FertiliserApplied</Name>
          <Series>
            <Name>Fertiliser</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Fertiliser</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>true</Cumulative>
            <CumulativeX>false</CumulativeX>
            <Filter />
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>0</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
      </Folder>
    </Simulation>
    <Folder>
      <Name>Plots</Name>
      <Graph>
        <Name>HarvestedZone0</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>Harvested</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>true</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone0'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>4000</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>HarvestedZone1</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>Harvested</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>true</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone1'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>4000</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>HarvestedZone2</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>Harvested</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>true</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone2'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>4000</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>WaterStress</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>glfWater</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>1.05</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>NStressZone0</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>glfNitrogen</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone0'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>1.05</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>NStressZone1</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>glfNitrogen</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone1'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>1.05</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>NStressZone2</Name>
        <Series>
          <Name>Ryegrass</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>glfNitrogen</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone2'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>1.05</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>SoilNitrogenZone0</Name>
        <Series>
          <Name>Nitrogen</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>SoilNitrogen</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone0'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>SoilNitrogenZone1</Name>
        <Series>
          <Name>Nitrogen</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>SoilNitrogen</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone1'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
      <Graph>
        <Name>SoilNitrogenZone2</Name>
        <Series>
          <Name>Nitrogen</Name>
          <Type>Scatter</Type>
          <XAxis>Bottom</XAxis>
          <YAxis>Left</YAxis>
          <ColourArgb>-16736653</ColourArgb>
          <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
          <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
          <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
          <Marker>None</Marker>
          <MarkerSize>Normal</MarkerSize>
          <Line>Solid</Line>
          <LineThickness>Normal</LineThickness>
          <TableName>Results</TableName>
          <XFieldName>Date</XFieldName>
          <YFieldName>SoilNitrogen</YFieldName>
          <ShowInLegend>true</ShowInLegend>
          <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
          <Cumulative>false</Cumulative>
          <CumulativeX>false</CumulativeX>
          <Filter>[Zone] = 'Zone2'</Filter>
        </Series>
        <Axis>
          <Type>Left</Type>
          <Title />
          <Inverted>false</Inverted>
          <Minimum>0</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <Axis>
          <Type>Bottom</Type>
          <Inverted>false</Inverted>
          <Minimum>NaN</Minimum>
          <Maximum>NaN</Maximum>
          <Interval>NaN</Interval>
        </Axis>
        <LegendPosition>TopRight</LegendPosition>
        <DisabledSeries />
        <IncludeInDocumentation>false</IncludeInDocumentation>
      </Graph>
    </Folder>
  </Folder>
  <Folder>
    <Name>Slurp_3Zone_UnequalNitrogen</Name>
    <Simulation>
      <Name>ThreeZoneSimSlurp</Name>
      <Clock>
        <Name>Clock</Name>
        <StartDate>2000-01-01T00:00:00</StartDate>
        <EndDate>2000-03-31T00:00:00</EndDate>
      </Clock>
      <ControlledEnvironment>
        <Name>ControlledEnvironment</Name>
        <MaxT>25</MaxT>
        <MinT>15</MinT>
        <Rain>0</Rain>
        <Radn>25</Radn>
        <PanEvap>0</PanEvap>
        <VP>17</VP>
        <Wind>3</Wind>
        <CO2>350</CO2>
        <AirPressure>1010</AirPressure>
        <Latitude>0</Latitude>
        <DayLength>12</DayLength>
      </ControlledEnvironment>
      <SoilArbitrator>
        <Name>SoilArbitrator</Name>
      </SoilArbitrator>
      <Summary>
        <Name>Summary</Name>
      </Summary>
      <Zone>
        <Name>Zone0</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>SlurpSowMultAndRoots</Name>
            <Script>
              <NumSlurps>1</NumSlurps>
              <CultivarName>StaticCrop</CultivarName>
              <InitialRootDepth>600</InitialRootDepth>
            </Script>
            <Code><![CDATA[
using System;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;
        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		[ScopedLinkByName] Plant Slurp1;
		[ScopedLinkByName] Plant Slurp2;
		[Link] Clock Clock;

		[Description("How many Slurps should be sown?")] public int NumSlurps { get; set; }
		[Description("Cultivar")] public string CultivarName { get; set; }
		[Description("Initial Root Depth")] public double InitialRootDepth { get; set; }
		//[Description("Sowing Date")] public DateTime SowingDate { get; set; }

               
		[EventSubscribe("DoManagement")] private void OnDoManagement(object sender, EventArgs e)
		{
			if (Clock.Today.Date == Clock.StartDate)
			{
				Slurp1.Sow(cultivar: CultivarName, population: 1, depth: InitialRootDepth, rowSpacing: 100);
				if (NumSlurps > 1)
					Slurp2.Sow(cultivar: CultivarName, population: 1, depth: InitialRootDepth, rowSpacing: 100);	
					
				Slurp1.Root.ZoneNamesToGrowRootsIn.Add("Zone1");
				//Slurp.Root.ZoneNamesToGrowRootsIn.Add("Zone3");
				Slurp1.Root.ZoneRootDepths.Add(300);
				//Slurp.Root.ZoneRootDepths.Add(50);
				Slurp1.Root.ZoneInitialDM.Add(1000);
				//Slurp.Root.ZoneInitialDM.Add(1000);

					
					
			}
		}
	}
}
				]]></Code>
          </Manager>
          <Manager>
            <Name>SlurpSetProd</Name>
            <Script>
              <myNumSlurps>0</myNumSlurps>
              <OverRidePath>Leaf.Photosynthesis.FixedValue</OverRidePath>
              <OverRidePhoto>12</OverRidePhoto>
              <OverRideLAI>3.5</OverRideLAI>
              <OverRideNUp>2</OverRideNUp>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using System.Collections.Generic;
using System.Text;
using Models.PMF;
using Models;
using System.Xml.Serialization;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable] 
	public class Script : Model
	{
		[Link] Plant Plant;
		[ScopedLinkByName] Plant Slurp1;
		[ScopedLinkByName] Plant Slurp2;
		[Link] Clock Clock;
		[Link] Zone zone;
		
		public int myNumSlurps { get; set; }
		public string OverRidePath { get; set; }
		
		//[Description("Change Date")] public DateTime ChangeDate { get; set; }
		[Description("Value for Leaf.Photosynthesis.FixedValue")] public double OverRidePhoto { get; set; }
		[Description("Value for Leaf.LAIFunction.FixedValue")] public double OverRideLAI { get; set; }
		[Description("Value for Root.MaxDailyNUptake.FixedValue")] public double OverRideNUp { get; set; }
		//[Description("Value for new coefficient Integer")] public int OverRideInteger { get; set; }

		[EventSubscribe("StartOfSimulation")] private void OnStartOfSimulation(object sender, EventArgs e)
		{
		}
        
		[EventSubscribe("DoManagement")] private void OnDoManagement(object sender, EventArgs e)
		{
			if (Clock.Today.Date == Clock.StartDate)
			{
				myNumSlurps = (int)zone.Get("[SlurpSowMultAndRoots].Script.NumSlurps");
				//OverRidePath = "Leaf.Photosynthesis.FixedValue";

				object ResetValue = OverRidePhoto;
				OverRidePath = "Leaf.Photosynthesis.FixedValue";
				zone.Set("Slurp1." + OverRidePath, ResetValue);
				if (myNumSlurps > 1)
					zone.Set("Slurp2." + OverRidePath, ResetValue);

				ResetValue = OverRideLAI;
				OverRidePath = "Leaf.LAIFunction.FixedValue";
				zone.Set("Slurp1." + OverRidePath, ResetValue);
				if (myNumSlurps > 1)
					zone.Set("Slurp2." + OverRidePath, ResetValue);

				ResetValue = OverRidePhoto;
				OverRidePath = "Root.MaxDailyNUptake.FixedValue";
				zone.Set("Slurp1." + OverRidePath, ResetValue);
				if (myNumSlurps > 1)
					zone.Set("Slurp2." + OverRidePath, ResetValue);

			}
		}
	}
}
	   ]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>no</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>SlurpSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Slurp1Soil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Slurp2Soil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>2</WinterU>
            <WinterCona>2</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>25</double>
              <double>25</double>
              <double>25</double>
              <double>25</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <Plant>
          <Name>Slurp1</Name>
          <ResourceName>Slurp</ResourceName>
          <CropType>Slurp</CropType>
          <SowingDate>0001-01-01T00:00:00</SowingDate>
        </Plant>
        <Plant>
          <Name>Slurp2</Name>
          <ResourceName>Slurp</ResourceName>
          <CropType>Slurp</CropType>
          <SowingDate>0001-01-01T00:00:00</SowingDate>
        </Plant>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Slurp1].Leaf.CoverGreen as CoverGreen</string>
            <string>[Slurp1].Leaf.PotentialEP as SW_Demand</string>
            <string>[Slurp1].Root.WaterUptake as SW_Uptake</string>
            <string>[Slurp1].Arbitrator.N.TotalPlantDemand as N_Demand</string>
            <string>[Slurp1].Root.NTakenUp as N_Uptake</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Zone>
        <Name>Zone1</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>no</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>0</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>0</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>Soil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </CEC>
            <ParticleSizeSand>
              <double>10</double>
              <double>10</double>
              <double>10</double>
              <double>10</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>30</double>
              <double>30</double>
              <double>30</double>
              <double>30</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>60</double>
              <double>60</double>
              <double>60</double>
              <double>60</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>SlurpSoil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Slurp1Soil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Slurp2Soil</Name>
              <LL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.1</double>
              </LL>
              <KL>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
                <double>0.05</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
              <double>1.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </AirDry>
            <LL15>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </LL15>
            <DUL>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
              <double>0.45</double>
            </DUL>
            <SAT>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </SAT>
            <KS>
              <double>500</double>
              <double>500</double>
              <double>500</double>
              <double>500</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>2</WinterU>
            <WinterCona>2</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <SWCON>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
              <double>0.3</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>0</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-45</string>
              <string>45-60</string>
            </Depth>
            <OC>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </OC>
            <FBiom>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>150</double>
              <double>150</double>
            </Thickness>
            <NO3>
              <double>25</double>
              <double>25</double>
              <double>25</double>
              <double>25</double>
            </NO3>
            <NH4>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType />
          <LocalName>Stores lots of water</LocalName>
          <Site>Made up</Site>
          <NearestTown />
          <Region />
          <Country />
          <NaturalVegetation />
          <Latitude>0</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <Plant>
          <Name>Slurp1</Name>
          <ResourceName>Slurp</ResourceName>
          <CropType>Slurp</CropType>
          <SowingDate>0001-01-01T00:00:00</SowingDate>
        </Plant>
        <Plant>
          <Name>Slurp2</Name>
          <ResourceName>Slurp</ResourceName>
          <CropType>Slurp</CropType>
          <SowingDate>0001-01-01T00:00:00</SowingDate>
        </Plant>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[Slurp1].Leaf.CoverGreen as CoverGreen</string>
            <string>[Slurp1].Leaf.PotentialEP as SW_Demand</string>
            <string>[Slurp1].Root.WaterUptake as SW_Uptake</string>
            <string>[Slurp1].Arbitrator.N.TotalPlantDemand as N_Demand</string>
            <string>[Slurp1].Root.NTakenUp as N_Uptake</string>
            <string>sum([Soil].SoilWater.SWmm) as SoilWater</string>
            <string>sum([Soil].SoilNitrogen.NH4)+sum([Soil].SoilNitrogen.NO3) as SoilNitrogen</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
      <Folder>
        <Name>SimPlots</Name>
        <Graph>
          <Name>SoilWater</Name>
          <Series>
            <Name>Water</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilWater</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>SoilNitrogen</Name>
          <Series>
            <Name>Nitrogen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SoilNitrogen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>CoverGreen</Name>
          <Series>
            <Name>CoverGreen</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>CoverGreen</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Series>
            <Name>Demand1</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>Slurp1.Root.WaterUptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>WaterUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>SW_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NDemand</Name>
          <Series>
            <Name>Demand</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>N_Demand</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <Graph>
          <Name>NUptake</Name>
          <Series>
            <Name>Uptake</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Results</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>N_Uptake</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>false</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title />
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
      </Folder>
    </Simulation>
    <Simulation>
      <Name>SlurpBase</Name>
      <Clock>
        <Name>Clock</Name>
        <StartDate>2000-01-01T00:00:00</StartDate>
        <EndDate>2000-03-31T00:00:00</EndDate>
      </Clock>
      <ControlledEnvironment>
        <Name>ControlledEnvironment</Name>
        <MaxT>25</MaxT>
        <MinT>15</MinT>
        <Rain>0</Rain>
        <Radn>25</Radn>
        <PanEvap>0</PanEvap>
        <VP>17</VP>
        <Wind>3</Wind>
        <CO2>350</CO2>
        <AirPressure>1010</AirPressure>
        <Latitude>0</Latitude>
        <DayLength>12</DayLength>
      </ControlledEnvironment>
      <SoilArbitrator>
        <Name>SoilArbitrator</Name>
      </SoilArbitrator>
      <Summary>
        <Name>Summary</Name>
      </Summary>
      <Zone>
        <Name>Field</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>SlurpSowMulitple</Name>
            <Script>
              <NumSlurps>1</NumSlurps>
              <CultivarName>StaticCrop</CultivarName>
              <InitialRootDepth>600</InitialRootDepth>
              <SowingDate>1980-07-01</SowingDate>
            </Script>
            <Code><![CDATA[
using System;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;
        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		[ScopedLinkByName] Plant Slurp1;
		[ScopedLinkByName] Plant Slurp2;
		[Link] Clock Clock;

		[Description("How many Slurps should be sown?")] public int NumSlurps { get; set; }
		[Description("Cultivar")] public string CultivarName { get; set; }
		[Description("Initial Root Depth")] public double InitialRootDepth { get; set; }
		[Description("Sowing Date")] public DateTime SowingDate { get; set; }

               
		[EventSubscribe("DoManagement")] private void OnDoManagement(object sender, EventArgs e)
		{
			if (Clock.Today.Date == SowingDate)
			{
				Slurp1.Sow(cultivar: CultivarName, population: 1, depth: InitialRootDepth, rowSpacing: 150);
				if (NumSlurps > 1)
					Slurp2.Sow(cultivar: CultivarName, population: 1, depth: InitialRootDepth, rowSpacing: 150);				
			}
		}
	}
}
				]]></Code>
          </Manager>
          <Manager>
            <Name>SetProduction</Name>
            <Script>
              <myNumSlurps>0</myNumSlurps>
              <OverRidePath>Leaf.Photosynthesis.FixedValue</OverRidePath>
              <ChangeDate>1980-07-01</ChangeDate>
              <OverRidePhoto>6</OverRidePhoto>
              <OverRideLAI>3.5</OverRideLAI>
              <OverRideNUp>4</OverRideNUp>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using System.Collections.Generic;
using System.Text;
using Models.PMF;
using Models;
using System.Xml.Serialization;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable] 
	public class Script : Model
	{
		[Link] Plant Plant;
		[ScopedLinkByName] Plant Slurp1;
		[ScopedLinkByName] Plant Slurp2;
		[Link] Clock Clock;
		[Link] Zone zone;
		
		public int myNumSlurps { get; set; }
		public string OverRidePath { get; set; }
		
		[Description("Change Date")] public DateTime ChangeDate { get; set; }
		[Description("Value for Leaf.Photosynthesis.FixedValue")] public double OverRidePhoto { get; set; }
		[Description("Value for Leaf.LAIFunction.FixedValue")] public double OverRideLAI { get; set; }
		[Description("Value for Root.MaxDailyNUptake.FixedValue")] public double OverRideNUp { get; set; }
		//[Description("Value for new coefficient Integer")] public int OverRideInteger { get; set; }




		[EventSubscribe("StartOfSimulation")] private void OnStartOfSimulation(object sender, EventArgs e)
		{
			myNumSlurps = (int)zone.Get("[SlurpSowMulitple].Script.NumSlurps");
			OverRidePath = "Leaf.Photosynthesis.FixedValue";
		}
        
		[EventSubscribe("DoManagement")] private void OnDoManagement(object sender, EventArgs e)
		{
			if (Clock.Today.Date == ChangeDate)
			{
				object ResetValue = OverRidePhoto;
				OverRidePath = "Leaf.Photosynthesis.FixedValue";
				zone.Set("Slurp1." + OverRidePath, ResetValue);
				if (myNumSlurps > 1)
					zone.Set("Slurp2." + OverRidePath, ResetValue);

				ResetValue = OverRideLAI;
				OverRidePath = "Leaf.LAIFunction.FixedValue";
				zone.Set("Slurp1." + OverRidePath, ResetValue);
				if (myNumSlurps > 1)
					zone.Set("Slurp2." + OverRidePath, ResetValue);

				ResetValue = OverRidePhoto;
				OverRidePath = "Root.MaxDailyNUptake.FixedValue";
				zone.Set("Slurp1." + OverRidePath, ResetValue);
				if (myNumSlurps > 1)
					zone.Set("Slurp2." + OverRidePath, ResetValue);
			}
		}
	}
}
	   ]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>50</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>1</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <allowIrrigationAll>yes</allowIrrigationAll>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>99</triggerDeficit>
              <targetDeficit>100</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>5</maximumAmount>
              <depthPAWC>600</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")] public answerType allowIrrigation { get; set; }
		[Description("Irrigate regardless of crop state?")] public answerType allowIrrigationAll { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool IrrigationIsAlwaysAllowed { get; set; }
		
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 
			if (allowIrrigationAll == answerType.yes)
				IrrigationIsAlwaysAllowed = true; 





			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if (IrrigationIsAlwaysAllowed)
				CropIsActive = true;  // might not be but we don't care
			else if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>0</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.29366217672824863</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>1000</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>1000</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <Plant>
          <Name>Slurp1</Name>
          <ResourceName>Slurp</ResourceName>
          <CropType>Slurp</CropType>
          <SowingDate>0001-01-01T00:00:00</SowingDate>
        </Plant>
        <Plant>
          <Name>Slurp2</Name>
          <ResourceName>Slurp</ResourceName>
          <CropType>Slurp</CropType>
          <SowingDate>0001-01-01T00:00:00</SowingDate>
        </Plant>
        <Soil>
          <Name>LismoreSoil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>10</double>
              <double>40</double>
              <double>60</double>
              <double>70</double>
              <double>70</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>12.5</double>
              <double>10</double>
              <double>9</double>
              <double>5</double>
              <double>4</double>
              <double>4</double>
              <double>4</double>
            </CEC>
            <ParticleSizeSand>
              <double>15</double>
              <double>20</double>
              <double>25</double>
              <double>35</double>
              <double>40</double>
              <double>40</double>
              <double>40</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>65</double>
              <double>65</double>
              <double>63</double>
              <double>57</double>
              <double>54</double>
              <double>55</double>
              <double>55</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>20</double>
              <double>15</double>
              <double>12</double>
              <double>8</double>
              <double>6</double>
              <double>5</double>
              <double>5</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>SwardSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>RyegrassSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Slurp1Soil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Slurp2Soil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.35</double>
              <double>1</double>
              <double>0.53</double>
              <double>0.31</double>
              <double>0.3</double>
              <double>0.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.12</double>
              <double>0.055</double>
              <double>0.015</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </AirDry>
            <LL15>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.055</double>
              <double>0.015</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL15>
            <DUL>
              <double>0.36</double>
              <double>0.34</double>
              <double>0.19</double>
              <double>0.065</double>
              <double>0.04</double>
              <double>0.03</double>
              <double>0.03</double>
            </DUL>
            <SAT>
              <double>0.45</double>
              <double>0.43</double>
              <double>0.25</double>
              <double>0.15</double>
              <double>0.11</double>
              <double>0.11</double>
              <double>0.11</double>
            </SAT>
            <KS>
              <double>5000</double>
              <double>2500</double>
              <double>3000</double>
              <double>10000</double>
              <double>17500</double>
              <double>20000</double>
              <double>20000</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>2</WinterU>
            <WinterCona>2</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <SWCON>
              <double>0.5</double>
              <double>0.52</double>
              <double>0.55</double>
              <double>0.6</double>
              <double>0.65</double>
              <double>0.65</double>
              <double>0.65</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
              <double>0.25025052330473485</double>
              <double>0.15035274660681502</double>
              <double>0.10019396267774858</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>1000</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-50</string>
              <string>50-65</string>
              <string>65-90</string>
              <string>90-120</string>
              <string>120-150</string>
            </Depth>
            <OC>
              <double>3</double>
              <double>1</double>
              <double>0.6</double>
              <double>0.4</double>
              <double>0.25</double>
              <double>0.15</double>
              <double>0.1</double>
            </OC>
            <FBiom>
              <double>0.04</double>
              <double>0.02</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0.5</double>
              <double>0.7</double>
              <double>0.83</double>
              <double>0.9</double>
              <double>0.95</double>
              <double>0.99</double>
              <double>0.99</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <NO3>
              <double>50</double>
              <double>50</double>
              <double>50</double>
              <double>50</double>
              <double>50</double>
              <double>50</double>
              <double>50</double>
            </NO3>
            <NH4>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType>NZ_Sedimentary</SoilType>
          <LocalName>Lismore</LocalName>
          <Site>Winchmore</Site>
          <NearestTown>Ashburton</NearestTown>
          <Region>Canterbury</Region>
          <Country>New Zealand</Country>
          <NaturalVegetation />
          <Latitude>-48.48</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>[SlurpSowMulitple].Script.NumSlurps as NumSlurps</string>
            <string>[Slurp1].Leaf.Wt</string>
            <string>[Slurp2].Leaf.Wt</string>
            <string>[Slurp1].Root.NTakenUp</string>
            <string>[Slurp2].Root.NTakenUp</string>
            <string>[Slurp1].Root.WaterUptake</string>
            <string>[Slurp2].Root.WaterUptake</string>
            <string>([Slurp1].Leaf.Wt+[Slurp2].Leaf.Wt) as LeafWt</string>
            <string>([Slurp1].Leaf.LAI+[Slurp2].Leaf.LAI) as LAI</string>
            <string>([Slurp1].Root.NTakenUp+[Slurp2].Root.NTakenUp) as NTakenUp</string>
            <string>sum([LismoreSoil].SoilNitrogen.NO3)</string>
            <string>sum([LismoreSoil].SoilWater.SWmm)</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
    </Simulation>
  </Folder>
  <Folder>
    <Name>Folder</Name>
    <Manager>
      <Name>DoRootsThreeZone_Slurp</Name>
      <Script>
        <RootDepth>600</RootDepth>
        <RootMass>500</RootMass>
        <Zone0Name>Zone0</Zone0Name>
        <Zone0Prop>0</Zone0Prop>
        <Zone2Name>Zone1</Zone2Name>
        <Zone2Prop>0.3</Zone2Prop>
      </Script>
      <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		[Link] Plant Slurp;
		
		//List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();

		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;

			if (Zone0Prop > 0)
			{
				Slurp.Root.ZoneNamesToGrowRootsIn.Add(Zone0Name);
				Slurp.Root.ZoneRootDepths.Add(Zone0Prop * RootDepth);
				Slurp.Root.ZoneInitialDM.Add(Zone0Prop * RootMass);
			}
			if (Zone2Prop > 0)
			{
				Slurp.Root.ZoneNamesToGrowRootsIn.Add(Zone2Name);
				Slurp.Root.ZoneRootDepths.Add(Zone2Prop * RootDepth);
				Slurp.Root.ZoneInitialDM.Add(Zone2Prop * RootMass);
			}

			/*foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			} */

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
    </Manager>
    <Manager>
      <Name>DoRootsThreeZone_AgPasture</Name>
      <Script>
        <RootDepth>600</RootDepth>
        <RootMass>500</RootMass>
        <Zone0Name>Zone0</Zone0Name>
        <Zone0Prop>0</Zone0Prop>
        <Zone2Name>Zone1</Zone2Name>
        <Zone2Prop>0.3</Zone2Prop>
      </Script>
      <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Root depth in the plant's zone (mm): ")]  public double RootDepth { get; set; }
		[Description("Root mass  in the plant's zone (mm): ")]  public double RootMass { get; set; }

		[Description("Name of zone ot the left: ")] public string Zone0Name { get; set; }
		[Description("Proportionate depth and mass in zone to the left (-): ")]  public double Zone0Prop { get; set; }

		[Description("Name of zone ot the right: ")] public string Zone2Name { get; set; }
		[Description("Proportionate depth and mass in zone to the right (-): ")]  public double Zone2Prop { get; set; }

		// - Outputs from this manager

		// - Internal variables

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			int SpeciesNum = 0;
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				SpeciesNum += 1;
				if (SpeciesNum == 1)
				{
					if (Zone0Prop > 0)
						species.AddZone(zoneName: Zone0Name, rootDepth: Zone0Prop * RootDepth, rootDM: Zone0Prop * RootMass, specificRootLength: 100);
					if (Zone2Prop > 0)
						species.AddZone(zoneName: Zone2Name, rootDepth: Zone2Prop * RootDepth, rootDM: Zone2Prop * RootMass, specificRootLength: 100);
				}
			}

			//Pasture[1].AddZone(zoneName: "Zone1", rootDepth: 100, rootDM: 1000, specificRootLength: 100);
			//Pasture[1].AddZone(zoneName: "Zone2", rootDepth: 50, rootDM: 500, specificRootLength: 100);
		}
	}
}]]></Code>
    </Manager>
    <Soil>
      <Name>Soil_withOM</Name>
      <Analysis>
        <Name>Analysis</Name>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <Rocks>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </Rocks>
        <Texture />
        <MunsellColour />
        <PH>
          <double>6</double>
          <double>6</double>
          <double>6</double>
          <double>6</double>
        </PH>
        <CEC>
          <double>10</double>
          <double>10</double>
          <double>10</double>
          <double>10</double>
        </CEC>
        <ParticleSizeSand>
          <double>10</double>
          <double>10</double>
          <double>10</double>
          <double>10</double>
        </ParticleSizeSand>
        <ParticleSizeSilt>
          <double>30</double>
          <double>30</double>
          <double>30</double>
          <double>30</double>
        </ParticleSizeSilt>
        <ParticleSizeClay>
          <double>60</double>
          <double>60</double>
          <double>60</double>
          <double>60</double>
        </ParticleSizeClay>
        <PHUnits>Water</PHUnits>
        <BoronUnits>HotWater</BoronUnits>
      </Analysis>
      <Water>
        <Name>Water</Name>
        <SoilCrop>
          <Name>RyegrassSoil</Name>
          <LL>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </LL>
          <KL>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop>
          <Name>WhiteCloverSoil</Name>
          <LL>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </LL>
          <KL>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <BD>
          <double>1.3</double>
          <double>1.3</double>
          <double>1.3</double>
          <double>1.3</double>
        </BD>
        <AirDry>
          <double>0.05</double>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
        </AirDry>
        <LL15>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
        </LL15>
        <DUL>
          <double>0.45</double>
          <double>0.45</double>
          <double>0.45</double>
          <double>0.45</double>
        </DUL>
        <SAT>
          <double>0.5</double>
          <double>0.5</double>
          <double>0.5</double>
          <double>0.5</double>
        </SAT>
        <KS>
          <double>500</double>
          <double>500</double>
          <double>500</double>
          <double>500</double>
        </KS>
      </Water>
      <SoilWater>
        <Name>SoilWater</Name>
        <SummerDate>1-Nov</SummerDate>
        <SummerU>6</SummerU>
        <SummerCona>3.5</SummerCona>
        <WinterDate>1-apr</WinterDate>
        <WinterU>2</WinterU>
        <WinterCona>2</WinterCona>
        <DiffusConst>88</DiffusConst>
        <DiffusSlope>35</DiffusSlope>
        <Salb>0.13</Salb>
        <CN2Bare>73</CN2Bare>
        <CNRed>20</CNRed>
        <CNCov>0.8</CNCov>
        <slope>0</slope>
        <discharge_width>0</discharge_width>
        <catchment_area>0</catchment_area>
        <max_pond>0</max_pond>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <SWCON>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
        </SWCON>
        <KLAT>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </KLAT>
        <residueinterception>0</residueinterception>
      </SoilWater>
      <SoilNitrogen>
        <Name>SoilNitrogen</Name>
        <fom_type>
          <string>default</string>
          <string>manure</string>
          <string>mucuna</string>
          <string>lablab</string>
          <string>shemp</string>
          <string>stable</string>
        </fom_type>
        <fract_carb>
          <double>0.2</double>
          <double>0.3</double>
          <double>0.54</double>
          <double>0.57</double>
          <double>0.45</double>
          <double>0</double>
        </fract_carb>
        <fract_cell>
          <double>0.7</double>
          <double>0.3</double>
          <double>0.37</double>
          <double>0.37</double>
          <double>0.47</double>
          <double>0.1</double>
        </fract_cell>
        <fract_lign>
          <double>0.1</double>
          <double>0.4</double>
          <double>0.09</double>
          <double>0.06</double>
          <double>0.08</double>
          <double>0.9</double>
        </fract_lign>
        <wfpsN2N2O_x>
          <double>22</double>
          <double>88</double>
        </wfpsN2N2O_x>
        <wfpsN2N2O_y>
          <double>0.1</double>
          <double>1</double>
        </wfpsN2N2O_y>
        <oc>
          <double>3.7136764881329496</double>
          <double>2.4698281813043792</double>
          <double>1.2383961716086014</double>
          <double>0.49836009167083023</double>
        </oc>
      </SoilNitrogen>
      <SoilOrganicMatter>
        <Name>SoilOrganicMatter</Name>
        <RootCN>40</RootCN>
        <RootWt>1000</RootWt>
        <SoilCN>12</SoilCN>
        <EnrACoeff>7.4</EnrACoeff>
        <EnrBCoeff>0.2</EnrBCoeff>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <Depth>
          <string>0-15</string>
          <string>15-30</string>
          <string>30-45</string>
          <string>45-60</string>
        </Depth>
        <OC>
          <double>3</double>
          <double>1</double>
          <double>0.6</double>
          <double>0.4</double>
        </OC>
        <FBiom>
          <double>0.04</double>
          <double>0.02</double>
          <double>0.02</double>
          <double>0.01</double>
        </FBiom>
        <FInert>
          <double>0.5</double>
          <double>0.7</double>
          <double>0.83</double>
          <double>0.9</double>
        </FInert>
        <OCUnits>Total</OCUnits>
      </SoilOrganicMatter>
      <InitialWater>
        <Name>Initial water</Name>
        <PercentMethod>EvenlyDistributed</PercentMethod>
        <FractionFull>0.95</FractionFull>
        <DepthWetSoil>NaN</DepthWetSoil>
      </InitialWater>
      <Sample>
        <Name>Initial nitrogen</Name>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <NO3>
          <double>25</double>
          <double>25</double>
          <double>25</double>
          <double>25</double>
        </NO3>
        <NH4>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </NH4>
        <NO3Units>ppm</NO3Units>
        <NH4Units>ppm</NH4Units>
        <SWUnits>Volumetric</SWUnits>
        <OCUnits>Total</OCUnits>
        <PHUnits>Water</PHUnits>
      </Sample>
      <CERESSoilTemperature>
        <Name>CERESSoilTemperature</Name>
      </CERESSoilTemperature>
      <RecordNumber>0</RecordNumber>
      <SoilType />
      <LocalName>Stores lots of water</LocalName>
      <Site>Made up</Site>
      <NearestTown />
      <Region />
      <Country />
      <NaturalVegetation />
      <Latitude>0</Latitude>
      <Longitude>0</Longitude>
    </Soil>
    <Soil>
      <Name>Soil_noOM</Name>
      <Analysis>
        <Name>Analysis</Name>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <Rocks>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </Rocks>
        <Texture />
        <MunsellColour />
        <PH>
          <double>6</double>
          <double>6</double>
          <double>6</double>
          <double>6</double>
        </PH>
        <CEC>
          <double>10</double>
          <double>10</double>
          <double>10</double>
          <double>10</double>
        </CEC>
        <ParticleSizeSand>
          <double>10</double>
          <double>10</double>
          <double>10</double>
          <double>10</double>
        </ParticleSizeSand>
        <ParticleSizeSilt>
          <double>30</double>
          <double>30</double>
          <double>30</double>
          <double>30</double>
        </ParticleSizeSilt>
        <ParticleSizeClay>
          <double>60</double>
          <double>60</double>
          <double>60</double>
          <double>60</double>
        </ParticleSizeClay>
        <PHUnits>Water</PHUnits>
        <BoronUnits>HotWater</BoronUnits>
      </Analysis>
      <Water>
        <Name>Water</Name>
        <SoilCrop>
          <Name>RyegrassSoil</Name>
          <LL>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </LL>
          <KL>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <SoilCrop>
          <Name>WhiteCloverSoil</Name>
          <LL>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </LL>
          <KL>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
            <double>0.05</double>
          </KL>
          <XF>
            <double>1</double>
            <double>1</double>
            <double>1</double>
            <double>1</double>
          </XF>
        </SoilCrop>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <BD>
          <double>1.3</double>
          <double>1.3</double>
          <double>1.3</double>
          <double>1.3</double>
        </BD>
        <AirDry>
          <double>0.05</double>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
        </AirDry>
        <LL15>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
          <double>0.1</double>
        </LL15>
        <DUL>
          <double>0.45</double>
          <double>0.45</double>
          <double>0.45</double>
          <double>0.45</double>
        </DUL>
        <SAT>
          <double>0.5</double>
          <double>0.5</double>
          <double>0.5</double>
          <double>0.5</double>
        </SAT>
        <KS>
          <double>500</double>
          <double>500</double>
          <double>500</double>
          <double>500</double>
        </KS>
      </Water>
      <SoilWater>
        <Name>SoilWater</Name>
        <SummerDate>1-Nov</SummerDate>
        <SummerU>6</SummerU>
        <SummerCona>3.5</SummerCona>
        <WinterDate>1-apr</WinterDate>
        <WinterU>6</WinterU>
        <WinterCona>3.5</WinterCona>
        <DiffusConst>88</DiffusConst>
        <DiffusSlope>35</DiffusSlope>
        <Salb>0.13</Salb>
        <CN2Bare>73</CN2Bare>
        <CNRed>20</CNRed>
        <CNCov>0.8</CNCov>
        <slope>0</slope>
        <discharge_width>0</discharge_width>
        <catchment_area>0</catchment_area>
        <max_pond>0</max_pond>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <SWCON>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
          <double>0.3</double>
        </SWCON>
        <KLAT>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </KLAT>
        <residueinterception>0</residueinterception>
      </SoilWater>
      <SoilNitrogen>
        <Name>SoilNitrogen</Name>
        <fom_type>
          <string>default</string>
          <string>manure</string>
          <string>mucuna</string>
          <string>lablab</string>
          <string>shemp</string>
          <string>stable</string>
        </fom_type>
        <fract_carb>
          <double>0.2</double>
          <double>0.3</double>
          <double>0.54</double>
          <double>0.57</double>
          <double>0.45</double>
          <double>0</double>
        </fract_carb>
        <fract_cell>
          <double>0.7</double>
          <double>0.3</double>
          <double>0.37</double>
          <double>0.37</double>
          <double>0.47</double>
          <double>0.1</double>
        </fract_cell>
        <fract_lign>
          <double>0.1</double>
          <double>0.4</double>
          <double>0.09</double>
          <double>0.06</double>
          <double>0.08</double>
          <double>0.9</double>
        </fract_lign>
        <wfpsN2N2O_x>
          <double>22</double>
          <double>88</double>
        </wfpsN2N2O_x>
        <wfpsN2N2O_y>
          <double>0.1</double>
          <double>1</double>
        </wfpsN2N2O_y>
        <oc>
          <double>3.7136764881329496</double>
          <double>2.4698281813043792</double>
          <double>1.2383961716086014</double>
          <double>0.49836009167083023</double>
        </oc>
      </SoilNitrogen>
      <SoilOrganicMatter>
        <Name>SoilOrganicMatter</Name>
        <RootCN>40</RootCN>
        <RootWt>0</RootWt>
        <SoilCN>12</SoilCN>
        <EnrACoeff>7.4</EnrACoeff>
        <EnrBCoeff>0.2</EnrBCoeff>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <Depth>
          <string>0-15</string>
          <string>15-30</string>
          <string>30-45</string>
          <string>45-60</string>
        </Depth>
        <OC>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </OC>
        <FBiom>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </FBiom>
        <FInert>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </FInert>
        <OCUnits>Total</OCUnits>
      </SoilOrganicMatter>
      <InitialWater>
        <Name>Initial water</Name>
        <PercentMethod>EvenlyDistributed</PercentMethod>
        <FractionFull>0.95</FractionFull>
        <DepthWetSoil>NaN</DepthWetSoil>
      </InitialWater>
      <Sample>
        <Name>Initial nitrogen</Name>
        <Thickness>
          <double>150</double>
          <double>150</double>
          <double>150</double>
          <double>150</double>
        </Thickness>
        <NO3>
          <double>15</double>
          <double>15</double>
          <double>15</double>
          <double>15</double>
        </NO3>
        <NH4>
          <double>0</double>
          <double>0</double>
          <double>0</double>
          <double>0</double>
        </NH4>
        <NO3Units>ppm</NO3Units>
        <NH4Units>ppm</NH4Units>
        <SWUnits>Volumetric</SWUnits>
        <OCUnits>Total</OCUnits>
        <PHUnits>Water</PHUnits>
      </Sample>
      <CERESSoilTemperature>
        <Name>CERESSoilTemperature</Name>
      </CERESSoilTemperature>
      <RecordNumber>0</RecordNumber>
      <SoilType />
      <LocalName>Stores lots of water</LocalName>
      <Site>Made up</Site>
      <NearestTown />
      <Region />
      <Country />
      <NaturalVegetation />
      <Latitude>0</Latitude>
      <Longitude>0</Longitude>
    </Soil>
  </Folder>
  <ExplorerWidth>280</ExplorerWidth>
</Simulations>