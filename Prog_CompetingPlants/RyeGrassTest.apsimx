<?xml version="1.0" encoding="utf-8"?>
<Simulations xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="5">
  <Name>Simulations</Name>
  <DataStore>
    <Name>DataStore</Name>
    <AutoExport>false</AutoExport>
    <MaximumResultsPerPage>0</MaximumResultsPerPage>
  </DataStore>
  <Folder>
    <Name>AgPasture</Name>
    <Simulation>
      <Name>Species1</Name>
      <Clock>
        <Name>Clock</Name>
        <StartDate>1980-07-01T00:00:00</StartDate>
        <EndDate>2002-06-30T00:00:00</EndDate>
      </Clock>
      <Weather>
        <Name>Weather</Name>
        <FileName>%root%\Examples\WeatherFiles\lincoln.met</FileName>
        <ExcelWorkSheetName />
      </Weather>
      <SoilArbitrator>
        <Name>SoilArbitrator</Name>
      </SoilArbitrator>
      <Summary>
        <Name>Summary</Name>
      </Summary>
      <Zone>
        <Name>Field</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>CutRotation</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>21</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>1000</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;
//using System.Linq;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }
		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }
		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }
		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }
		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }
		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }
		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }
		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }
		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }
		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
				{	//PostHarvestDM = Pasture[0].StandingHerbageWt + Pasture[1].StandingHerbageWt;
					PostHarvestDM = 0.0;
					foreach (AgPasture.PastureSpecies mySpecies in Pasture)
						PostHarvestDM += mySpecies.StandingHerbageWt;
				}
				;
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			//PreHarvestDM = Pasture[0].StandingHerbageWt + Pasture[1].StandingHerbageWt;
			PreHarvestDM = 0.0;
			foreach (AgPasture.PastureSpecies mySpecies in Pasture)
				PreHarvestDM += mySpecies.StandingHerbageWt;

			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
			{
				//PostHarvestDM = Pasture[0].StandingHerbageWt + Pasture[1].StandingHerbageWt;
				PostHarvestDM = 0.0;
				foreach (AgPasture.PastureSpecies mySpecies in Pasture)
					PostHarvestDM += mySpecies.StandingHerbageWt;
			}
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			//double existingWt = Pasture[0].HarvestableWt + Pasture[1].HarvestableWt;
			double existingWt = 0.0;
			foreach (AgPasture.PastureSpecies mySpecies in Pasture)
				existingWt += mySpecies.HarvestableWt;

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				//DefoliatedWt = Pasture[0].HarvestedWt + Pasture[1].HarvestedWt;
				//DefoliatedN = Pasture[0].HarvestedN + Pasture[1].HarvestedN;
				DefoliatedWt = 0.0;
				DefoliatedN = 0.0;
				foreach (AgPasture.PastureSpecies mySpecies in Pasture)
				{
					DefoliatedWt += mySpecies.HarvestedWt;
					DefoliatedN += mySpecies.HarvestedWt;
				}
				
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					//fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt + Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt;
					fractionDM2Remove = 0.0;
					foreach (AgPasture.PastureSpecies mySpecies in Pasture)
						fractionDM2Remove += mySpecies.HarvestedDigestibility * mySpecies.HarvestedWt;
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>5</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>15</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>75</triggerDeficit>
              <targetDeficit>99</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>30</maximumAmount>
              <depthPAWC>300</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")]
		public answerType allowIrrigation { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 

			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>1000</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>1000</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>LismoreSoil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>10</double>
              <double>40</double>
              <double>60</double>
              <double>70</double>
              <double>70</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>12.5</double>
              <double>10</double>
              <double>9</double>
              <double>5</double>
              <double>4</double>
              <double>4</double>
              <double>4</double>
            </CEC>
            <ParticleSizeSand>
              <double>15</double>
              <double>20</double>
              <double>25</double>
              <double>35</double>
              <double>40</double>
              <double>40</double>
              <double>40</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>65</double>
              <double>65</double>
              <double>63</double>
              <double>57</double>
              <double>54</double>
              <double>55</double>
              <double>55</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>20</double>
              <double>15</double>
              <double>12</double>
              <double>8</double>
              <double>6</double>
              <double>5</double>
              <double>5</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>SwardSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Ryegrass0Soil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>SlurpSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.35</double>
              <double>1</double>
              <double>0.53</double>
              <double>0.31</double>
              <double>0.3</double>
              <double>0.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.12</double>
              <double>0.055</double>
              <double>0.015</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </AirDry>
            <LL15>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.055</double>
              <double>0.015</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL15>
            <DUL>
              <double>0.36</double>
              <double>0.34</double>
              <double>0.19</double>
              <double>0.065</double>
              <double>0.04</double>
              <double>0.03</double>
              <double>0.03</double>
            </DUL>
            <SAT>
              <double>0.45</double>
              <double>0.43</double>
              <double>0.25</double>
              <double>0.15</double>
              <double>0.11</double>
              <double>0.11</double>
              <double>0.11</double>
            </SAT>
            <KS>
              <double>5000</double>
              <double>2500</double>
              <double>3000</double>
              <double>10000</double>
              <double>17500</double>
              <double>20000</double>
              <double>20000</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>2</WinterU>
            <WinterCona>2</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <SWCON>
              <double>0.5</double>
              <double>0.52</double>
              <double>0.55</double>
              <double>0.6</double>
              <double>0.65</double>
              <double>0.65</double>
              <double>0.65</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
              <double>0.25025052330473485</double>
              <double>0.15035274660681502</double>
              <double>0.10019396267774858</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>1000</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-50</string>
              <string>50-65</string>
              <string>65-90</string>
              <string>90-120</string>
              <string>120-150</string>
            </Depth>
            <OC>
              <double>3</double>
              <double>1</double>
              <double>0.6</double>
              <double>0.4</double>
              <double>0.25</double>
              <double>0.15</double>
              <double>0.1</double>
            </OC>
            <FBiom>
              <double>0.04</double>
              <double>0.02</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0.5</double>
              <double>0.7</double>
              <double>0.83</double>
              <double>0.9</double>
              <double>0.95</double>
              <double>0.99</double>
              <double>0.99</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>2.5</double>
              <double>1</double>
              <double>0.75</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </NO3>
            <NH4>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType>NZ_Sedimentary</SoilType>
          <LocalName>Lismore</LocalName>
          <Site>Winchmore</Site>
          <NearestTown>Ashburton</NearestTown>
          <Region>Canterbury</Region>
          <Country>New Zealand</Country>
          <NaturalVegetation />
          <Latitude>-48.48</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <PastureSpecies>
          <Name>Ryegrass0</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>1500</InitialShootDM>
          <InitialRootDM>450</InitialRootDM>
          <InitialRootDepth>750</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>([Ryegrass0].TotalWt) as TotalWt</string>
            <string>([Ryegrass0].AboveGroundWt) as AboveGroundWt</string>
            <string>sum([Ryegrass0].WaterUptake) as SoilUptakeWater</string>
            <string>([Ryegrass0].TotalN) as TotalN</string>
            <string>([Ryegrass0].SoilUptakeN) as SoilUptakeN</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
    </Simulation>
    <Simulation>
      <Name>Species2</Name>
      <Clock>
        <Name>Clock</Name>
        <StartDate>1980-07-01T00:00:00</StartDate>
        <EndDate>2002-06-30T00:00:00</EndDate>
      </Clock>
      <Weather>
        <Name>Weather</Name>
        <FileName>%root%\Examples\WeatherFiles\lincoln.met</FileName>
        <ExcelWorkSheetName />
      </Weather>
      <SoilArbitrator>
        <Name>SoilArbitrator</Name>
      </SoilArbitrator>
      <Summary>
        <Name>Summary</Name>
      </Summary>
      <Zone>
        <Name>Field</Name>
        <Folder>
          <Name>Managers</Name>
          <Manager>
            <Name>CutRotation</Name>
            <Script>
              <CutRotationStartDate>1900-07-01</CutRotationStartDate>
              <CutRotationEndDate>2100-12-31</CutRotationEndDate>
              <CutInterval>21</CutInterval>
              <IntervalType>FixedInterval</IntervalType>
              <DurationOfCut>1</DurationOfCut>
              <RemoveAmountType>ResidualDM</RemoveAmountType>
              <AmountGiven>1000</AmountGiven>
              <DMRemoveType>RemoveAll</DMRemoveType>
              <FractionN2Remove>1</FractionN2Remove>
              <ProportionN2Dung>0</ProportionN2Dung>
            </Script>
            <Code><![CDATA[// Defoliates AgPasture on a regular rotation or one-off via a schedule
// currenty defoliates the amount specified by spreading evenly over the specified period

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using Models.Core;
using Models.PMF;
using APSIM.Shared.Utilities;
//using System.Linq;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		// - Links to APSIM models
		[Link] Zone myZone;
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		
		List<AgPasture.PastureSpecies> Pasture = new List<AgPasture.PastureSpecies>();
		
		// - Paramters for this manager
		[Description("Date to begin the rotation: ")]
		public DateTime CutRotationStartDate { get; set; }
		[Description("Date to finish the rotation: ")]
		public DateTime CutRotationEndDate { get; set; }
		[Description("Rotation interval (days): ")]
		public int CutInterval { get; set; }
		[Description("How the interval is defined: ")]
		public rotationIntervalTypes IntervalType { get; set; }
		[Description("Duration of each event (days): ")]
		public int DurationOfCut { get; set; }
		[Description("What amount is being defined: ")]
		public removeAmountTypes RemoveAmountType { get; set; }
		[Description("Amount to use (kg/ha): ")]
		public double AmountGiven { get; set; }
		[Description("Fraction of DM that is removed from the field:")]
		public removeDMTypes DMRemoveType { get; set; }
		[Description("Fraction of N that is removed from the field (0-1):")]
		public double FractionN2Remove { get; set; }
		[Description("Proportion of N returned in dung (0-1):")]
		public double ProportionN2Dung { get; set; }

		// - Outputs from this manager
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM defoliated today
		public double DefoliatedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N defoliate today
		public double DefoliatedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM harvested today
		public double HarvestedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N harvested today
		public double HarvestedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture DM removed from the field
		public double RemovedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Pasture N removed from the field
		public double RemovedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue DM returned to the field
		public double ReturnedWt { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Residue N returned to the field
		public double ReturnedN { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as dung (SurfaceOM)
		public double NReturnedInDung { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Harvested N returned as urine (urea)
		public double NReturnedInUrine { get; set; }
		[XmlIgnore][Units("day")]// Description: Number of days after last defoliation
		public int DaysAfterCut { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) before cut
		public double PreHarvestDM { get; set; }
		[XmlIgnore][Units("g/m2")]// Description: Total standing DM (Leaf + Stem/Sheath) after cut
		public double PostHarvestDM { get; set; }
		
		// - Internal variables
		// fraction of harvested Dm to actually remove from field
		private double fractionDM2Remove = 1.0;
		// flag whether defoliation is allowed
		private bool rotationAllowed = true;
		// number of days for each defoliation event
		private int cuttingDuration = 0;
		// counter for day within each defoliation
		private int daysCutting = 0;
		// type of interval (Fixed or target)
		private string intervalType;
		// total herbage to remove in g/m2 per day
		private double herbageToRemove;
		// type of DM amount (ResidualDM or DMToRemove)
		private string amountType;
		// auxiliary flag for defoliation
		private bool aCutHasHappened = false;

		// - Event to add residue or dung to surface OM
		public event BiomassRemovedDelegate BiomassRemoved;

		[EventSubscribe("Commencing")]
		private void OnSimulationCommencing(object sender, EventArgs e)
		{
			foreach (AgPasture.PastureSpecies species in Apsim.Children(myZone, typeof(AgPasture.PastureSpecies)))
			{
				Pasture.Add(species);
			}

			// reset variables
			DaysAfterCut = 0;
			resetVariables();
			cuttingDuration = DurationOfCut;
			
			// get the type of amount given
			if (RemoveAmountType == removeAmountTypes.ResidualDM)
				amountType = "SetResidueAmount";
			else
				amountType = "SetRemoveAmount";

			// get the type of amount given
			if (IntervalType == rotationIntervalTypes.FixedInterval)
				intervalType = "Fixed";
			else
				intervalType = "Target";

			// make sure that rotation start when startDate < simulationStartDay
			if ((Clock.Today > CutRotationStartDate) && (Clock.Today < CutRotationEndDate))
				CutRotationStartDate = Clock.Today;
		}
		
		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			if (rotationAllowed)
			{
				if (Clock.Today == CutRotationStartDate)
					DaysAfterCut = CutInterval;

				// Check whether we can defoliate
				if ((Clock.Today >= CutRotationStartDate) && (Clock.Today <= CutRotationEndDate) && (Pasture[0].IsAlive))
				{
					// Check whether we should start a defoliation
					if (DaysAfterCut >= (CutInterval - 1))
					{
						Graze(AmountGiven, amountType, DurationOfCut);
					}
				}
			}

			// Check whether we need to continue cutting
			if ((daysCutting > 0) && (daysCutting < cuttingDuration))
			{
				// reset outputs
				resetVariables();

				removeDM(herbageToRemove);
				returnExcreta();
				daysCutting += 1;
				if (daysCutting == cuttingDuration)
				{	//PostHarvestDM = Pasture[0].StandingHerbageWt + Pasture[1].StandingHerbageWt;
					PostHarvestDM = 0.0;
					foreach (AgPasture.PastureSpecies mySpecies in Pasture)
						PostHarvestDM += mySpecies.StandingHerbageWt;
				}
				;
			}

			// reset outputs
			if (daysCutting < 0)
			{
				resetVariables();
				daysCutting = 0;
			}
		}

		[EventSubscribe("DoManagementCalculations")]
		private void OnDoManagementCalculations(object sender, EventArgs e)
		{
			// Check whether a cutting has finished
			if (daysCutting == cuttingDuration)
			{
				aCutHasHappened = true;
				daysCutting = -1;
			}

			// Increase the counter for days after cutting
			if (aCutHasHappened && (daysCutting == 0))
				DaysAfterCut += 1;
		}

		public enum removeAmountTypes
		{
			/// <summary>Setting DM amount to remove</summary>
			DMToRemove,
			/// <summary>Setting residual DM amount</summary>
			ResidualDM
		}

		public enum rotationIntervalTypes
		{
			/// <summary>Setting a fixed interval</summary>
			FixedInterval,
			/// <summary>Setting a target (minimum) inteval</summary>
			TargetInterval
		}

		public enum removeDMTypes
		{
			/// <summary>Remove all DM</summary>
			RemoveAll,
			/// <summary>Remove no DM</summary>
			RemoveNone,
			/// <summary>Remove a fraction based on digestibility</summary>
			BasedOnDigestibility
		}

		// Resets the values of all outputs
		private void resetVariables()
		{
			DefoliatedWt = 0.0;
			DefoliatedN = 0.0;
			HarvestedWt = 0.0;
			HarvestedN = 0.0;
			RemovedWt = 0.0;
			RemovedN = 0.0;
			ReturnedWt = 0.0;
			ReturnedN = 0.0;
			NReturnedInDung = 0.0;
			NReturnedInUrine = 0.0;
		}

		// Description: Perform the basic calculations for defoliation
		public void Graze(double amountDM, string amountType, int duration)
		{
			// Get the existing plant amount
			//PreHarvestDM = Pasture[0].StandingHerbageWt + Pasture[1].StandingHerbageWt;
			PreHarvestDM = 0.0;
			foreach (AgPasture.PastureSpecies mySpecies in Pasture)
				PreHarvestDM += mySpecies.StandingHerbageWt;

			// Check the amount to remove and print some info
			if ((amountType == "SetRemoveAmount") && (PreHarvestDM >= amountDM / duration))
			{
				summary.WriteMessage(this, "   Defoliating " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = amountDM / duration;
			}
			else if ((amountType == "SetResidueAmount") && (PreHarvestDM >= amountDM))
			{
				summary.WriteMessage(this, "   Defoliating down to approximately " + (10 * amountDM).ToString("#0.0") + "kg/ha over " + duration + " days");
				herbageToRemove = (PreHarvestDM - amountDM) / duration;
			}
			else
			{
				summary.WriteMessage(this, "   Defoliation will not happend because there is not enough plant material");
				if (intervalType == "Fixed")
					DaysAfterCut = -duration;
				return;
			}

			cuttingDuration = duration;
			// Preform first defoliation
			removeDM(herbageToRemove);
			returnExcreta();
			daysCutting = 1;
			DaysAfterCut = 0;
			if (daysCutting == cuttingDuration)
			{
				//PostHarvestDM = Pasture[0].StandingHerbageWt + Pasture[1].StandingHerbageWt;
				PostHarvestDM = 0.0;
				foreach (AgPasture.PastureSpecies mySpecies in Pasture)
					PostHarvestDM += mySpecies.StandingHerbageWt;
			}
		}

		// Do the DM removal
		private void removeDM(double removeAmount)
		{
			//double existingWt = Pasture[0].HarvestableWt + Pasture[1].HarvestableWt;
			double existingWt = 0.0;
			foreach (AgPasture.PastureSpecies mySpecies in Pasture)
				existingWt += mySpecies.HarvestableWt;

			// Check whether we harvest anything
			if (existingWt >= removeAmount)
			{
				foreach (AgPasture.PastureSpecies species in Pasture)
				{
					double amountToRemove = removeAmount * species.HarvestableWt / existingWt;
					species.Graze(amount: amountToRemove, type: "SetRemoveAmount");
				}
				
				// get total harvested
				//DefoliatedWt = Pasture[0].HarvestedWt + Pasture[1].HarvestedWt;
				//DefoliatedN = Pasture[0].HarvestedN + Pasture[1].HarvestedN;
				DefoliatedWt = 0.0;
				DefoliatedN = 0.0;
				foreach (AgPasture.PastureSpecies mySpecies in Pasture)
				{
					DefoliatedWt += mySpecies.HarvestedWt;
					DefoliatedN += mySpecies.HarvestedWt;
				}
				
				HarvestedWt = DefoliatedWt;
				HarvestedN = DefoliatedN;

				// get amounts actually removed from field and that to be returned (dung/urine)
				if (DMRemoveType == removeDMTypes.RemoveAll)
					fractionDM2Remove = 1.0;
				else if (DMRemoveType == removeDMTypes.RemoveNone)
					fractionDM2Remove = 0.0;
				else
				{
					//fractionDM2Remove = Pasture[0].HarvestedDigestibility * Pasture[0].HarvestedWt + Pasture[1].HarvestedDigestibility * Pasture[1].HarvestedWt;
					fractionDM2Remove = 0.0;
					foreach (AgPasture.PastureSpecies mySpecies in Pasture)
						fractionDM2Remove += mySpecies.HarvestedDigestibility * mySpecies.HarvestedWt;
					fractionDM2Remove /= removeAmount;
				}
				
				RemovedWt = HarvestedWt * fractionDM2Remove;
				RemovedN = HarvestedN * FractionN2Remove;
				ReturnedWt = HarvestedWt - RemovedWt;
				ReturnedN = HarvestedN - RemovedN;
				NReturnedInDung = ReturnedN * ProportionN2Dung;
				NReturnedInUrine = ReturnedN - NReturnedInDung;
			}
		}

		// Return dung and urine
		private void returnExcreta()
		{
			if ((ReturnedWt > 0.0) || (NReturnedInDung > 0.0))
			{
				PMF.BiomassRemovedType BiomassDung = new PMF.BiomassRemovedType();
				string[] type = new string[] { "RuminantDung_PastureFed" };
				float[] dltdm = new float[] { (Single)ReturnedWt };
				float[] dltn = new float[] { (Single)NReturnedInDung };
				float[] dltp = new float[] { 0 };
				float[] fraction = new float[] { 1 };     // fraction is always 1.0 here

				BiomassDung.crop_type = "RuminantDung_PastureFed";
				BiomassDung.dm_type = type;
				BiomassDung.dlt_crop_dm = dltdm;
				BiomassDung.dlt_dm_n = dltn;
				BiomassDung.dlt_dm_p = dltp;
				BiomassDung.fraction_to_residue = fraction;
				BiomassRemoved.Invoke(BiomassDung);
			}

			if (NReturnedInUrine > 0.0)
			{
				fertiliser.Apply(NReturnedInUrine * 10, Fertiliser.Types.UreaN, 1.0);
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticFertiliser</Name>
            <Script>
              <AllowFertiliser>no</AllowFertiliser>
              <Depth2SoilN>500</Depth2SoilN>
              <CriticalSoilN>5</CriticalSoilN>
              <FertNAmount>25</FertNAmount>
              <FertType>UreaN</FertType>
              <FertApplicationDepth>1</FertApplicationDepth>
              <FertMinimumDays>15</FertMinimumDays>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using APSIM.Shared.Utilities;
using System.Xml.Serialization;

namespace Models
{
	[Serializable]
	public class Script : Model
	{
		[Link] Clock Clock;
		[Link] Fertiliser fertiliser;
		[Link] ISummary summary = null;
		[Link] Soil Soil;

		//User inputs from properties tab
		[Description("Turn ferliser applications on? ")]
		public yesnoType AllowFertiliser { get; set; }
		
		[Description("Depth to calculate available soil N (mm): ")]
		public double Depth2SoilN { get; set; }

		[Description("Minimum available N, triggers an application (kgN/ha): ")]
		public double CriticalSoilN { get; set; }

		[Description("Amount of N fertiliser for each application (kgN/ha): ")]
		public double FertNAmount { get; set; }

		[Description("Type of N fertiliser to apply: ")]
		public Fertiliser.Types FertType { get; set; }

		[Description("Depth at which to apply the fertiliser (mm): ")]
		public double FertApplicationDepth { get; set; }
	   
		[Description("Minimum period between applications (days): ")]
		public double FertMinimumDays { get; set; }
	   
		public enum yesnoType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		[XmlIgnore] public double TopMineralN { get; set; }
		
		private DateTime lastApplicationDate;
		private bool fertiliserIsAllowed;
		private int nLayers;

		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{
			fertiliserIsAllowed = (AllowFertiliser == yesnoType.yes);
			nLayers = Soil.SoilWater.Thickness.Length;
		}

		[EventSubscribe("DoManagement")]
		private void OnDoManagement(object sender, EventArgs e)
		{
			double daysSinceLastApplication = (Clock.Today - lastApplicationDate).TotalDays;
			
			// get the N stored in the soil
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopMineralN = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (Depth2SoilN - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopMineralN += (Soil.SoilNitrogen.NO3[layer]
				+ Soil.SoilNitrogen.NH4[layer]
				+ Soil.SoilNitrogen.urea[layer])
				* fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= Depth2SoilN)
					layer = nLayers;
			}

			if (fertiliserIsAllowed && (daysSinceLastApplication >= FertMinimumDays) && (TopMineralN <= CriticalSoilN))
			{
				fertiliser.Apply(FertNAmount, FertType, FertApplicationDepth);
				lastApplicationDate = Clock.Today;
			}
		}
	}
}
]]></Code>
          </Manager>
          <Manager>
            <Name>AutomaticIrrigation</Name>
            <Script>
              <allowIrrigation>yes</allowIrrigation>
              <seasonStart>15-Aug</seasonStart>
              <seasonEnd>30-May</seasonEnd>
              <seasonsAllocation>10000</seasonsAllocation>
              <triggerDeficit>75</triggerDeficit>
              <targetDeficit>99</targetDeficit>
              <returndays>1</returndays>
              <maximumAmount>30</maximumAmount>
              <depthPAWC>300</depthPAWC>
            </Script>
            <Code><![CDATA[using System;
using Models.Core;
using Models.PMF;
using Models.Soils;
using System.Xml.Serialization;
using Models.PMF;
using APSIM.Shared.Utilities;

        
namespace Models
{
	[Serializable] 
	[System.Xml.Serialization.XmlInclude(typeof(Model))]
	public class Script : Model
	{
		//Communication to other modules
		[Link] ISummary summary = null;
		[Link] Irrigation Irrigation;
		[Link] Clock Clock;
		[Link] Soil Soil;
		[Link(IsOptional = true)] ICrop existingCrop;
	   
		//User inputs from properties tab
		[Description("Turn irrigation on?")]
		public answerType allowIrrigation { get; set; }
		[Description("Start of irrigation season (dd-MMM)")]
		public string seasonStart { get; set; }
		[Description("End of irrigation season (dd-MMM)")]
		public string seasonEnd { get; set; }
		[Description("Season allocation (mm)")]
		public double seasonsAllocation { get; set; }
		[Description("Deficit to trigger irrigation (% PAWC)")]
		public double triggerDeficit { get; set; }
		[Description("Deficit to stop irrigaton (% PAWC)")]
		public double targetDeficit { get; set; }
		[Description("Minimum days for irrigation to return")]
		public double returndays { get; set; }
		[Description("Maximum irrigation application (mm/day)")]
		public double maximumAmount { get; set; }
		[Description("Depth to calculate PAWC (mm)")]
		public double depthPAWC { get; set; }
	   
		public enum answerType
		{
			/// <summary>a positive answer</summary>
			yes,
			/// <summary>a negative answer</summary>
			no
		}

		//Class members
		[XmlIgnore] public double TopSWdeficit { get; set; }
		[XmlIgnore] public double TopSWC { get; set; }
		[XmlIgnore] public double DaysSinceIrrigation { get; set; }
		[XmlIgnore] public double AmountToApply { get; set; }
		[XmlIgnore] public double SeasonAppliedAmount { get; set; }
		
		private bool IrrigationIsAllowed { get; set; }
		private bool SeasonIsOpen { get; set; }
		private bool CropIsActive { get; set; }
		private bool IrrigatorIsAvailable { get; set; }
		private bool SoilIsDry { get; set; }

		private DateTime StartDate;
		private DateTime EndDate;
		private double TopDUL;
		private double TopLL;
		private int nLayers;
	
		//Calculate static soil variables
		[EventSubscribe("StartOfSimulation")]
		private void OnStartOfSimulation(object sender, EventArgs e)
		{   
			//Set the season dates
			StartDate = DateTime.Parse(seasonStart + "-" + Clock.Today.Year.ToString());
			EndDate = DateTime.Parse(seasonEnd + "-" + Clock.Today.Year.ToString());
			
			//Can we irrigate at all?
			IrrigationIsAllowed = false; 
			if (allowIrrigation == answerType.yes)
				IrrigationIsAllowed = true; 

			//Calculate soil water variables
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			nLayers = Soil.SoilWater.Thickness.Length;
			for (int layer = 0; layer < nLayers; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopLL += Soil.SoilWater.LL15mm[layer] * fracLayer;
				TopDUL += Soil.SoilWater.DULmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
		}
	   	  
		//Determine daily requirement for irrigation
		[EventSubscribe("StartOfDay")]
		private void OnStartOfDay(object sender, EventArgs e)
		{
			//Can we irrigate today?		  
			SeasonIsOpen = isBetween(Clock.Today, StartDate, EndDate);

			//Is there a crop in the ground that needs irrigation?
			CropIsActive = false;
			if ((existingCrop != null) && (existingCrop.IsAlive))
				CropIsActive = true;
			//if ((existingCrop.Phenology.Stage >= 3.0) && (existingCrop.Phenology.Stage < 6.0))
	      
			//Is the irrigator available?
			IrrigatorIsAvailable = false;
			DaysSinceIrrigation += 1;
			if (DaysSinceIrrigation >= returndays)
				IrrigatorIsAvailable = true;
	      
			//Is the soil dry enough to require irrigation?
			SoilIsDry = false;
			double depthFromSurface = 0.0;
			double fracLayer = 0.0;
			TopSWC = 0.0;
			for (int layer = 0; layer < nLayers; layer++)
			//for (int layer = 0; depthFromSurface < depthPAWC + Soil.SoilWater.Thickness[layer]; layer++)
			{
				fracLayer = Math.Min(1.0, (depthPAWC - depthFromSurface) / Soil.SoilWater.Thickness[layer]);
				TopSWC += Soil.SoilWater.SWmm[layer] * fracLayer;
				depthFromSurface += Soil.SoilWater.Thickness[layer];
				if (depthFromSurface >= depthPAWC)
					layer = nLayers;
			}
			
			TopSWdeficit = TopSWC - TopDUL;
			if (Math.Max(0.0, -TopSWdeficit) >= (TopDUL - TopLL) * (100 - triggerDeficit) / 100)
				SoilIsDry = true;
	            
			//Are all the conditions ratifying irrigation
			if (IrrigationIsAllowed && SeasonIsOpen && CropIsActive && IrrigatorIsAvailable && SoilIsDry)
			{
				//Lets bloody well irrigate then!!!!
				AmountToApply = TopDUL * targetDeficit / 100 - TopSWC;
				AmountToApply = Math.Max(0.0, Math.Min(AmountToApply, seasonsAllocation - SeasonAppliedAmount));
				Irrigation.Apply(AmountToApply);
				DaysSinceIrrigation = 0;
				SeasonAppliedAmount += AmountToApply;
			}
		}
		
		///Checks whether theDate is between iniDate and endDate (non-year specific)
		private bool isBetween(DateTime theDay, DateTime iniDate, DateTime endDate)
		{
			bool result = false;
			if (iniDate.DayOfYear < endDate.DayOfYear)
			{
				// period is within one year, ex: summer in the northern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) && (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			else
			{
				// period goes over the end of the year, ex: summer in the southern hemisphere
				if ((theDay.DayOfYear >= iniDate.DayOfYear) || (theDay.DayOfYear <= endDate.DayOfYear))
					result = true;
			}
			
			return result;
		}
	}
}
]]></Code>
          </Manager>
        </Folder>
        <MicroClimate>
          <Name>MicroClimate</Name>
          <a_interception>0</a_interception>
          <b_interception>1</b_interception>
          <c_interception>0</c_interception>
          <d_interception>0</d_interception>
          <soil_albedo>0.23</soil_albedo>
          <sun_angle>15</sun_angle>
          <soil_heat_flux_fraction>0.4</soil_heat_flux_fraction>
          <night_interception_fraction>0.5</night_interception_fraction>
          <refheight>2</refheight>
          <albedo>0.15</albedo>
          <emissivity>0.96</emissivity>
          <RadIntTotal>0</RadIntTotal>
        </MicroClimate>
        <Irrigation>
          <Name>Irrigation</Name>
        </Irrigation>
        <Fertiliser>
          <Name>Fertiliser</Name>
        </Fertiliser>
        <SurfaceOrganicMatter>
          <Name>SurfaceOrganicMatter</Name>
          <PondActive>no</PondActive>
          <ReportAdditions>no</ReportAdditions>
          <ReportRemovals>no</ReportRemovals>
          <ResidueTypes>
            <Name>ResidueTypes</Name>
            <LoadFromResource>ResidueTypes</LoadFromResource>
          </ResidueTypes>
          <TillageTypes>
            <Name>TillageTypesList</Name>
            <TillageType />
          </TillageTypes>
          <Pools>
            <Pool>
              <PoolName>Sward</PoolName>
              <ResidueType>grass</ResidueType>
              <Mass>1000</Mass>
              <CNRatio>15</CNRatio>
              <CPRatio>NaN</CPRatio>
              <StandingFraction>0</StandingFraction>
            </Pool>
          </Pools>
          <PoolName>Sward</PoolName>
          <type>grass</type>
          <mass>1000</mass>
          <standing_fraction>0</standing_fraction>
          <cpr />
          <cnr>15</cnr>
          <CriticalResidueWeight>2000</CriticalResidueWeight>
          <OptimumDecompTemp>20</OptimumDecompTemp>
          <MaxCumulativeEOS>20</MaxCumulativeEOS>
          <CNRatioDecompCoeff>0.277</CNRatioDecompCoeff>
          <CNRatioDecompThreshold>25</CNRatioDecompThreshold>
          <TotalLeachRain>25</TotalLeachRain>
          <MinRainToLeach>10</MinRainToLeach>
          <CriticalMinimumOrganicC>0.004</CriticalMinimumOrganicC>
          <DefaultCPRatio>0</DefaultCPRatio>
          <DefaultStandingFraction>0</DefaultStandingFraction>
          <StandingExtinctCoeff>0.5</StandingExtinctCoeff>
          <FractionFaecesAdded>0.5</FractionFaecesAdded>
        </SurfaceOrganicMatter>
        <Soil>
          <Name>LismoreSoil</Name>
          <Analysis>
            <Name>Analysis</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <Rocks>
              <double>0</double>
              <double>0</double>
              <double>10</double>
              <double>40</double>
              <double>60</double>
              <double>70</double>
              <double>70</double>
            </Rocks>
            <Texture />
            <MunsellColour />
            <PH>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
              <double>6</double>
            </PH>
            <CEC>
              <double>12.5</double>
              <double>10</double>
              <double>9</double>
              <double>5</double>
              <double>4</double>
              <double>4</double>
              <double>4</double>
            </CEC>
            <ParticleSizeSand>
              <double>15</double>
              <double>20</double>
              <double>25</double>
              <double>35</double>
              <double>40</double>
              <double>40</double>
              <double>40</double>
            </ParticleSizeSand>
            <ParticleSizeSilt>
              <double>65</double>
              <double>65</double>
              <double>63</double>
              <double>57</double>
              <double>54</double>
              <double>55</double>
              <double>55</double>
            </ParticleSizeSilt>
            <ParticleSizeClay>
              <double>20</double>
              <double>15</double>
              <double>12</double>
              <double>8</double>
              <double>6</double>
              <double>5</double>
              <double>5</double>
            </ParticleSizeClay>
            <PHUnits>Water</PHUnits>
            <BoronUnits>HotWater</BoronUnits>
          </Analysis>
          <Water>
            <Name>Water</Name>
            <SoilCrop>
              <Name>SwardSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Ryegrass0Soil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>Ryegrass1Soil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>WhiteCloverSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.1</double>
                <double>0.1</double>
                <double>0.08</double>
                <double>0.04</double>
                <double>0.01</double>
                <double>0</double>
                <double>0</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>0</double>
                <double>0</double>
              </XF>
            </SoilCrop>
            <SoilCrop>
              <Name>SlurpSoil</Name>
              <LL>
                <double>0.15</double>
                <double>0.14</double>
                <double>0.06</double>
                <double>0.02</double>
                <double>0.01</double>
                <double>0.01</double>
                <double>0.01</double>
              </LL>
              <KL>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
                <double>0.06</double>
              </KL>
              <XF>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
                <double>1</double>
              </XF>
            </SoilCrop>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <BD>
              <double>1.3</double>
              <double>1.35</double>
              <double>1</double>
              <double>0.53</double>
              <double>0.31</double>
              <double>0.3</double>
              <double>0.3</double>
            </BD>
            <AirDry>
              <double>0.05</double>
              <double>0.12</double>
              <double>0.055</double>
              <double>0.015</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </AirDry>
            <LL15>
              <double>0.15</double>
              <double>0.14</double>
              <double>0.055</double>
              <double>0.015</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0.01</double>
            </LL15>
            <DUL>
              <double>0.36</double>
              <double>0.34</double>
              <double>0.19</double>
              <double>0.065</double>
              <double>0.04</double>
              <double>0.03</double>
              <double>0.03</double>
            </DUL>
            <SAT>
              <double>0.45</double>
              <double>0.43</double>
              <double>0.25</double>
              <double>0.15</double>
              <double>0.11</double>
              <double>0.11</double>
              <double>0.11</double>
            </SAT>
            <KS>
              <double>5000</double>
              <double>2500</double>
              <double>3000</double>
              <double>10000</double>
              <double>17500</double>
              <double>20000</double>
              <double>20000</double>
            </KS>
          </Water>
          <SoilWater>
            <Name>SoilWater</Name>
            <SummerDate>1-Nov</SummerDate>
            <SummerU>6</SummerU>
            <SummerCona>3.5</SummerCona>
            <WinterDate>1-apr</WinterDate>
            <WinterU>2</WinterU>
            <WinterCona>2</WinterCona>
            <DiffusConst>88</DiffusConst>
            <DiffusSlope>35</DiffusSlope>
            <Salb>0.13</Salb>
            <CN2Bare>73</CN2Bare>
            <CNRed>20</CNRed>
            <CNCov>0.8</CNCov>
            <slope>0</slope>
            <discharge_width>0</discharge_width>
            <catchment_area>0</catchment_area>
            <max_pond>0</max_pond>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <SWCON>
              <double>0.5</double>
              <double>0.52</double>
              <double>0.55</double>
              <double>0.6</double>
              <double>0.65</double>
              <double>0.65</double>
              <double>0.65</double>
            </SWCON>
            <KLAT>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
              <double>0</double>
            </KLAT>
            <residueinterception>0</residueinterception>
          </SoilWater>
          <SoilNitrogen>
            <Name>SoilNitrogen</Name>
            <fom_type>
              <string>default</string>
              <string>manure</string>
              <string>mucuna</string>
              <string>lablab</string>
              <string>shemp</string>
              <string>stable</string>
            </fom_type>
            <fract_carb>
              <double>0.2</double>
              <double>0.3</double>
              <double>0.54</double>
              <double>0.57</double>
              <double>0.45</double>
              <double>0</double>
            </fract_carb>
            <fract_cell>
              <double>0.7</double>
              <double>0.3</double>
              <double>0.37</double>
              <double>0.37</double>
              <double>0.47</double>
              <double>0.1</double>
            </fract_cell>
            <fract_lign>
              <double>0.1</double>
              <double>0.4</double>
              <double>0.09</double>
              <double>0.06</double>
              <double>0.08</double>
              <double>0.9</double>
            </fract_lign>
            <wfpsN2N2O_x>
              <double>22</double>
              <double>88</double>
            </wfpsN2N2O_x>
            <wfpsN2N2O_y>
              <double>0.1</double>
              <double>1</double>
            </wfpsN2N2O_y>
            <oc>
              <double>3.7136764881329496</double>
              <double>2.4698281813043792</double>
              <double>1.2383961716086014</double>
              <double>0.49836009167083023</double>
              <double>0.25025052330473485</double>
              <double>0.15035274660681502</double>
              <double>0.10019396267774858</double>
            </oc>
          </SoilNitrogen>
          <SoilOrganicMatter>
            <Name>SoilOrganicMatter</Name>
            <RootCN>40</RootCN>
            <RootWt>1000</RootWt>
            <SoilCN>12</SoilCN>
            <EnrACoeff>7.4</EnrACoeff>
            <EnrBCoeff>0.2</EnrBCoeff>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <Depth>
              <string>0-15</string>
              <string>15-30</string>
              <string>30-50</string>
              <string>50-65</string>
              <string>65-90</string>
              <string>90-120</string>
              <string>120-150</string>
            </Depth>
            <OC>
              <double>3</double>
              <double>1</double>
              <double>0.6</double>
              <double>0.4</double>
              <double>0.25</double>
              <double>0.15</double>
              <double>0.1</double>
            </OC>
            <FBiom>
              <double>0.04</double>
              <double>0.02</double>
              <double>0.02</double>
              <double>0.01</double>
              <double>0.01</double>
              <double>0</double>
              <double>0</double>
            </FBiom>
            <FInert>
              <double>0.5</double>
              <double>0.7</double>
              <double>0.83</double>
              <double>0.9</double>
              <double>0.95</double>
              <double>0.99</double>
              <double>0.99</double>
            </FInert>
            <OCUnits>Total</OCUnits>
          </SoilOrganicMatter>
          <InitialWater>
            <Name>Initial water</Name>
            <PercentMethod>EvenlyDistributed</PercentMethod>
            <FractionFull>0.95</FractionFull>
            <DepthWetSoil>NaN</DepthWetSoil>
          </InitialWater>
          <Sample>
            <Name>Initial nitrogen</Name>
            <Thickness>
              <double>150</double>
              <double>150</double>
              <double>200</double>
              <double>150</double>
              <double>250</double>
              <double>300</double>
              <double>300</double>
            </Thickness>
            <NO3>
              <double>5</double>
              <double>2.5</double>
              <double>1</double>
              <double>0.75</double>
              <double>0.5</double>
              <double>0.5</double>
              <double>0.5</double>
            </NO3>
            <NH4>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
              <double>0.1</double>
            </NH4>
            <NO3Units>ppm</NO3Units>
            <NH4Units>ppm</NH4Units>
            <SWUnits>Volumetric</SWUnits>
            <OCUnits>Total</OCUnits>
            <PHUnits>Water</PHUnits>
          </Sample>
          <CERESSoilTemperature>
            <Name>CERESSoilTemperature</Name>
          </CERESSoilTemperature>
          <RecordNumber>0</RecordNumber>
          <SoilType>NZ_Sedimentary</SoilType>
          <LocalName>Lismore</LocalName>
          <Site>Winchmore</Site>
          <NearestTown>Ashburton</NearestTown>
          <Region>Canterbury</Region>
          <Country>New Zealand</Country>
          <NaturalVegetation />
          <Latitude>-48.48</Latitude>
          <Longitude>0</Longitude>
        </Soil>
        <PastureSpecies>
          <Name>Ryegrass0</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>750</InitialShootDM>
          <InitialRootDM>225</InitialRootDM>
          <InitialRootDepth>750</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <PastureSpecies>
          <Name>Ryegrass1</Name>
          <MaximumNUptake>10</MaximumNUptake>
          <Albedo>0.26</Albedo>
          <Gsmax>0.011</Gsmax>
          <R50>200</R50>
          <SpeciesFamily>Grass</SpeciesFamily>
          <PhotosyntheticPathway>C3</PhotosyntheticPathway>
          <InitialShootDM>750</InitialShootDM>
          <InitialRootDM>225</InitialRootDM>
          <InitialRootDepth>750</InitialRootDepth>
          <ReferencePhotosyntheticRate>1</ReferencePhotosyntheticRate>
          <LightExtinctionCoefficient>0.5</LightExtinctionCoefficient>
          <GrowthTminimum>1</GrowthTminimum>
          <GrowthToptimum>20</GrowthToptimum>
          <GrowthTEffectExponent>1.7</GrowthTEffectExponent>
          <UseHeatStressFactor>yes</UseHeatStressFactor>
          <HeatOnsetTemperature>28</HeatOnsetTemperature>
          <HeatFullTemperature>35</HeatFullTemperature>
          <HeatRecoverySumDD>30</HeatRecoverySumDD>
          <HeatRecoveryTReference>25</HeatRecoveryTReference>
          <UseColdStressFactor>yes</UseColdStressFactor>
          <ColdOnsetTemperature>1</ColdOnsetTemperature>
          <ColdFullTemperature>-5</ColdFullTemperature>
          <ColdRecoverySumDD>25</ColdRecoverySumDD>
          <ColdRecoveryTReference>0</ColdRecoveryTReference>
          <MaintenanceRespirationCoefficient>0.03</MaintenanceRespirationCoefficient>
          <GrowthRespirationCoefficient>0.25</GrowthRespirationCoefficient>
          <RespirationTReference>20</RespirationTReference>
          <RespirationExponent>1.5</RespirationExponent>
          <NThresholdsForLeaves>
            <double>0.04</double>
            <double>0.012</double>
            <double>0.05</double>
          </NThresholdsForLeaves>
          <NThresholdsForStems>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForStems>
          <NThresholdsForStolons>
            <double>0</double>
            <double>0</double>
            <double>0</double>
          </NThresholdsForStolons>
          <NThresholdsForRoots>
            <double>0.02</double>
            <double>0.006</double>
            <double>0.025</double>
          </NThresholdsForRoots>
          <DegreesDayForGermination>125</DegreesDayForGermination>
          <TargetShootRootRatio>4</TargetShootRootRatio>
          <MaxRootAllocation>0.25</MaxRootAllocation>
          <ShootRootGlfFactor>0.5</ShootRootGlfFactor>
          <UseReproSeasonFactor>yes</UseReproSeasonFactor>
          <ReproSeasonReferenceLatitude>41</ReproSeasonReferenceLatitude>
          <ReproSeasonTimingCoeff>0.14</ReproSeasonTimingCoeff>
          <ReproSeasonMaxAllocationIncrease>0.5</ReproSeasonMaxAllocationIncrease>
          <ReproSeasonAllocationCoeff>0.1</ReproSeasonAllocationCoeff>
          <FractionLeafMaximum>0.7</FractionLeafMaximum>
          <FractionLeafMinimum>0.7</FractionLeafMinimum>
          <FractionLeafDMThreshold>500</FractionLeafDMThreshold>
          <FractionLeafDMFactor>2000</FractionLeafDMFactor>
          <FractionLeafExponent>3</FractionLeafExponent>
          <FractionToStolon>0</FractionToStolon>
          <SpecificLeafArea>25</SpecificLeafArea>
          <SpecificRootLength>100</SpecificRootLength>
          <StolonEffectOnLAI>0</StolonEffectOnLAI>
          <ShootMaxEffectOnLAI>1000</ShootMaxEffectOnLAI>
          <MaxStemEffectOnLAI>1</MaxStemEffectOnLAI>
          <LiveLeavesPerTiller>3</LiveLeavesPerTiller>
          <TissueTurnoverRateShoot>0.05</TissueTurnoverRateShoot>
          <TissueTurnoverRateRoot>0.02</TissueTurnoverRateRoot>
          <DetachmentRateShoot>0.08</DetachmentRateShoot>
          <TurnoverTemperatureMin>2</TurnoverTemperatureMin>
          <TurnoverTemperatureRef>20</TurnoverTemperatureRef>
          <TurnoverTemperatureExponent>1</TurnoverTemperatureExponent>
          <TurnoverDroughtEffectMax>1</TurnoverDroughtEffectMax>
          <TurnoverDroughtThreshold>0.5</TurnoverDroughtThreshold>
          <TurnoverDefoliationCoefficient>0.5</TurnoverDefoliationCoefficient>
          <TurnoverDefoliationRootEffect>0.1</TurnoverDefoliationRootEffect>
          <FractionNLuxuryRemobilisable>
            <double>0.1</double>
            <double>0.1</double>
            <double>0.1</double>
          </FractionNLuxuryRemobilisable>
          <MinimumNFixation>0</MinimumNFixation>
          <MaximumNFixation>0</MaximumNFixation>
          <SoilSaturationEffectMax>0.1</SoilSaturationEffectMax>
          <MinimumWaterFreePorosity>-1</MinimumWaterFreePorosity>
          <SoilSaturationRecoveryFactor>0.25</SoilSaturationRecoveryFactor>
          <NDillutionCoefficient>0.25</NDillutionCoefficient>
          <GlfGeneric>1</GlfGeneric>
          <GlfSoilFertility>1</GlfSoilFertility>
          <PlantHeightMinimum>25</PlantHeightMinimum>
          <PlantHeightMaximum>600</PlantHeightMaximum>
          <PlantHeightMassForMax>10000</PlantHeightMassForMax>
          <PlantHeightExponent>2.8</PlantHeightExponent>
          <RootDepthMinimum>50</RootDepthMinimum>
          <RootDepthMaximum>750</RootDepthMaximum>
          <RootElongationRate>25</RootElongationRate>
          <RootDistributionDepthParam>90</RootDistributionDepthParam>
          <RootDistributionExponent>3.2</RootDistributionExponent>
          <DigestibilitiesCellWall>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.6</double>
            <double>0.2</double>
          </DigestibilitiesCellWall>
          <MinimumGreenWt>100</MinimumGreenWt>
          <FractionStolonStanding>0</FractionStolonStanding>
          <PreferenceForGreenOverDead>1</PreferenceForGreenOverDead>
          <PreferenceForLeafOverStems>1</PreferenceForLeafOverStems>
          <WaterAvailableMethod>DefaultAPSIM</WaterAvailableMethod>
          <NitrogenAvailableMethod>BasicAgPasture</NitrogenAvailableMethod>
        </PastureSpecies>
        <Report>
          <Name>Results</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>([Ryegrass0].TotalWt + [Ryegrass1].TotalWt) as TotalWt</string>
            <string>([Ryegrass0].AboveGroundWt) as AboveGroundWt</string>
            <string>sum([Ryegrass0].WaterUptake) as SoilUptakeWater</string>
            <string>([Ryegrass0].TotalN) as TotalN</string>
            <string>([Ryegrass0].SoilUptakeN) as SoilUptakeN</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Report>
          <Name>Species</Name>
          <ExperimentFactorNames />
          <ExperimentFactorValues />
          <VariableNames>
            <string>[Clock].Today as Date</string>
            <string>([Ryegrass0].TotalWt) as TotalWt0</string>
            <string>([Ryegrass1].TotalWt) as TotalWt1</string>
          </VariableNames>
          <EventNames>
            <string>[Clock].EndOfDay</string>
          </EventNames>
        </Report>
        <Graph>
          <Name>PlantWt</Name>
          <Series>
            <Name>DM0</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-16736653</ColourArgb>
            <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Species</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>TotalWt0</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Series>
            <Name>DM1</Name>
            <Type>Scatter</Type>
            <XAxis>Bottom</XAxis>
            <YAxis>Left</YAxis>
            <ColourArgb>-1663232</ColourArgb>
            <FactorIndexToVaryColours>-1</FactorIndexToVaryColours>
            <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
            <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
            <Marker>None</Marker>
            <MarkerSize>Normal</MarkerSize>
            <Line>Solid</Line>
            <LineThickness>Normal</LineThickness>
            <TableName>Species</TableName>
            <XFieldName>Date</XFieldName>
            <YFieldName>TotalWt1</YFieldName>
            <ShowInLegend>true</ShowInLegend>
            <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
            <Cumulative>false</Cumulative>
            <CumulativeX>false</CumulativeX>
          </Series>
          <Axis>
            <Type>Left</Type>
            <Title>DM (kg/ha)</Title>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <Axis>
            <Type>Bottom</Type>
            <Inverted>false</Inverted>
            <Minimum>NaN</Minimum>
            <Maximum>NaN</Maximum>
            <Interval>NaN</Interval>
          </Axis>
          <LegendPosition>TopRight</LegendPosition>
          <DisabledSeries />
          <IncludeInDocumentation>false</IncludeInDocumentation>
        </Graph>
        <SoluteManager>
          <Name>SoluteManager</Name>
        </SoluteManager>
        <Area>1</Area>
        <Slope>0</Slope>
      </Zone>
    </Simulation>
    <Graph>
      <Name>PlantWt</Name>
      <Series>
        <Name>DM</Name>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16736653</ColourArgb>
        <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <TableName>Results</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>TotalWt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
        <Cumulative>true</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Axis>
        <Type>Left</Type>
        <Title>DM (kg/ha)</Title>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Bottom</Type>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <LegendPosition>TopRight</LegendPosition>
      <DisabledSeries />
      <IncludeInDocumentation>false</IncludeInDocumentation>
    </Graph>
    <Graph>
      <Name>PlantWt1</Name>
      <Series>
        <Name>DM</Name>
        <Type>Scatter</Type>
        <XAxis>Bottom</XAxis>
        <YAxis>Left</YAxis>
        <ColourArgb>-16736653</ColourArgb>
        <FactorIndexToVaryColours>0</FactorIndexToVaryColours>
        <FactorIndexToVaryMarkers>-1</FactorIndexToVaryMarkers>
        <FactorIndexToVaryLines>-1</FactorIndexToVaryLines>
        <Marker>None</Marker>
        <MarkerSize>Normal</MarkerSize>
        <Line>Solid</Line>
        <LineThickness>Normal</LineThickness>
        <TableName>Results</TableName>
        <XFieldName>Date</XFieldName>
        <YFieldName>TotalWt</YFieldName>
        <ShowInLegend>true</ShowInLegend>
        <IncludeSeriesNameInLegend>true</IncludeSeriesNameInLegend>
        <Cumulative>false</Cumulative>
        <CumulativeX>false</CumulativeX>
      </Series>
      <Axis>
        <Type>Left</Type>
        <Title>DM (kg/ha)</Title>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <Axis>
        <Type>Bottom</Type>
        <Inverted>false</Inverted>
        <Minimum>NaN</Minimum>
        <Maximum>NaN</Maximum>
        <Interval>NaN</Interval>
      </Axis>
      <LegendPosition>TopRight</LegendPosition>
      <DisabledSeries />
      <IncludeInDocumentation>false</IncludeInDocumentation>
    </Graph>
  </Folder>
  <ExplorerWidth>300</ExplorerWidth>
</Simulations>